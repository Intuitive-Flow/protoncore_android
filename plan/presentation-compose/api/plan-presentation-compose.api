public class hilt_aggregated_deps/_me_proton_core_plan_presentation_compose_viewmodel_UpgradeStorageInfoViewModel_HiltModules_BindsModule {
	public fun <init> ()V
}

public class hilt_aggregated_deps/_me_proton_core_plan_presentation_compose_viewmodel_UpgradeStorageInfoViewModel_HiltModules_KeyModule {
	public fun <init> ()V
}

public final class me/proton/core/plan/presentation/compose/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class me/proton/core/plan/presentation/compose/component/ComposableSingletons$UpgradeStorageInfoKt {
	public static final field INSTANCE Lme/proton/core/plan/presentation/compose/component/ComposableSingletons$UpgradeStorageInfoKt;
	public static field lambda-1 Lkotlin/jvm/functions/Function2;
	public static field lambda-2 Lkotlin/jvm/functions/Function2;
	public static field lambda-3 Lkotlin/jvm/functions/Function2;
	public static field lambda-4 Lkotlin/jvm/functions/Function2;
	public static field lambda-5 Lkotlin/jvm/functions/Function2;
	public fun <init> ()V
	public final fun getLambda-1$plan_presentation_compose_release ()Lkotlin/jvm/functions/Function2;
	public final fun getLambda-2$plan_presentation_compose_release ()Lkotlin/jvm/functions/Function2;
	public final fun getLambda-3$plan_presentation_compose_release ()Lkotlin/jvm/functions/Function2;
	public final fun getLambda-4$plan_presentation_compose_release ()Lkotlin/jvm/functions/Function2;
	public final fun getLambda-5$plan_presentation_compose_release ()Lkotlin/jvm/functions/Function2;
}

public final class me/proton/core/plan/presentation/compose/component/UpgradeStorageInfoKt {
	public static final fun UpgradeStorageInfo (Lkotlin/jvm/functions/Function0;Ljava/lang/String;Landroidx/compose/ui/Modifier;Landroidx/compose/runtime/Composer;II)V
	public static final fun UpgradeStorageInfo (Lkotlin/jvm/functions/Function1;Landroidx/compose/ui/Modifier;Lme/proton/core/plan/presentation/compose/viewmodel/UpgradeStorageInfoViewModel;ZZLandroidx/compose/runtime/Composer;II)V
}

public final class me/proton/core/plan/presentation/compose/usecase/ObserveStorageUsage {
	public static final field $stable I
	public fun <init> (Lme/proton/core/user/domain/UserManager;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;)Lkotlinx/coroutines/flow/Flow;
}

public final class me/proton/core/plan/presentation/compose/usecase/ObserveStorageUsage$StorageUsage {
	public static final field $stable I
	public fun <init> (Ljava/lang/Integer;Ljava/lang/Integer;ILme/proton/core/domain/entity/UserId;)V
	public final fun component1 ()Ljava/lang/Integer;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun component3 ()I
	public final fun component4 ()Lme/proton/core/domain/entity/UserId;
	public final fun copy (Ljava/lang/Integer;Ljava/lang/Integer;ILme/proton/core/domain/entity/UserId;)Lme/proton/core/plan/presentation/compose/usecase/ObserveStorageUsage$StorageUsage;
	public static synthetic fun copy$default (Lme/proton/core/plan/presentation/compose/usecase/ObserveStorageUsage$StorageUsage;Ljava/lang/Integer;Ljava/lang/Integer;ILme/proton/core/domain/entity/UserId;ILjava/lang/Object;)Lme/proton/core/plan/presentation/compose/usecase/ObserveStorageUsage$StorageUsage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBasePercentage ()Ljava/lang/Integer;
	public final fun getDrivePercentage ()Ljava/lang/Integer;
	public final fun getTotalPercentage ()I
	public final fun getUserId ()Lme/proton/core/domain/entity/UserId;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/plan/presentation/compose/usecase/ObserveStorageUsage_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;)Lme/proton/core/plan/presentation/compose/usecase/ObserveStorageUsage_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/plan/presentation/compose/usecase/ObserveStorageUsage;
	public static fun newInstance (Lme/proton/core/user/domain/UserManager;)Lme/proton/core/plan/presentation/compose/usecase/ObserveStorageUsage;
}

public final class me/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage {
	public static final field $stable I
	public fun <init> (Lme/proton/core/accountmanager/domain/AccountManager;Lme/proton/core/plan/domain/usecase/CanUpgradeFromMobile;Lme/proton/core/plan/domain/IsSplitStorageEnabled;Lme/proton/core/plan/presentation/compose/usecase/ObserveStorageUsage;)V
	public final fun invoke ()Lkotlinx/coroutines/flow/Flow;
}

public abstract class me/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage$Result {
	public static final field $stable I
}

public final class me/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage$Result$DriveStorageUpgrade : me/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage$Result {
	public static final field $stable I
	public fun <init> (ILme/proton/core/domain/entity/UserId;)V
	public final fun component1 ()I
	public final fun component2 ()Lme/proton/core/domain/entity/UserId;
	public final fun copy (ILme/proton/core/domain/entity/UserId;)Lme/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage$Result$DriveStorageUpgrade;
	public static synthetic fun copy$default (Lme/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage$Result$DriveStorageUpgrade;ILme/proton/core/domain/entity/UserId;ILjava/lang/Object;)Lme/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage$Result$DriveStorageUpgrade;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getStoragePercentage ()I
	public final fun getUserId ()Lme/proton/core/domain/entity/UserId;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage$Result$MailStorageUpgrade : me/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage$Result {
	public static final field $stable I
	public fun <init> (ILme/proton/core/domain/entity/UserId;)V
	public final fun component1 ()I
	public final fun component2 ()Lme/proton/core/domain/entity/UserId;
	public final fun copy (ILme/proton/core/domain/entity/UserId;)Lme/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage$Result$MailStorageUpgrade;
	public static synthetic fun copy$default (Lme/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage$Result$MailStorageUpgrade;ILme/proton/core/domain/entity/UserId;ILjava/lang/Object;)Lme/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage$Result$MailStorageUpgrade;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getStoragePercentage ()I
	public final fun getUserId ()Lme/proton/core/domain/entity/UserId;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage$Result$NoUpgrade : me/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage$Result {
	public static final field $stable I
	public static final field INSTANCE Lme/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage$Result$NoUpgrade;
}

public final class me/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)Lme/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage;
	public static fun newInstance (Lme/proton/core/accountmanager/domain/AccountManager;Lme/proton/core/plan/domain/usecase/CanUpgradeFromMobile;Lme/proton/core/plan/domain/IsSplitStorageEnabled;Lme/proton/core/plan/presentation/compose/usecase/ObserveStorageUsage;)Lme/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage;
}

public abstract class me/proton/core/plan/presentation/compose/viewmodel/AccountStorageState {
	public static final field $stable I
}

public final class me/proton/core/plan/presentation/compose/viewmodel/AccountStorageState$Hidden : me/proton/core/plan/presentation/compose/viewmodel/AccountStorageState {
	public static final field $stable I
	public static final field INSTANCE Lme/proton/core/plan/presentation/compose/viewmodel/AccountStorageState$Hidden;
}

public abstract class me/proton/core/plan/presentation/compose/viewmodel/AccountStorageState$HighStorageUsage : me/proton/core/plan/presentation/compose/viewmodel/AccountStorageState {
	public static final field $stable I
	public synthetic fun <init> (ILme/proton/core/domain/entity/UserId;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getPercentage ()I
	public fun getUserId ()Lme/proton/core/domain/entity/UserId;
}

public final class me/proton/core/plan/presentation/compose/viewmodel/AccountStorageState$HighStorageUsage$Drive : me/proton/core/plan/presentation/compose/viewmodel/AccountStorageState$HighStorageUsage {
	public static final field $stable I
	public fun <init> (ILme/proton/core/domain/entity/UserId;)V
	public final fun component1 ()I
	public final fun component2 ()Lme/proton/core/domain/entity/UserId;
	public final fun copy (ILme/proton/core/domain/entity/UserId;)Lme/proton/core/plan/presentation/compose/viewmodel/AccountStorageState$HighStorageUsage$Drive;
	public static synthetic fun copy$default (Lme/proton/core/plan/presentation/compose/viewmodel/AccountStorageState$HighStorageUsage$Drive;ILme/proton/core/domain/entity/UserId;ILjava/lang/Object;)Lme/proton/core/plan/presentation/compose/viewmodel/AccountStorageState$HighStorageUsage$Drive;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPercentage ()I
	public fun getUserId ()Lme/proton/core/domain/entity/UserId;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/plan/presentation/compose/viewmodel/AccountStorageState$HighStorageUsage$Mail : me/proton/core/plan/presentation/compose/viewmodel/AccountStorageState$HighStorageUsage {
	public static final field $stable I
	public fun <init> (ILme/proton/core/domain/entity/UserId;)V
	public final fun component1 ()I
	public final fun component2 ()Lme/proton/core/domain/entity/UserId;
	public final fun copy (ILme/proton/core/domain/entity/UserId;)Lme/proton/core/plan/presentation/compose/viewmodel/AccountStorageState$HighStorageUsage$Mail;
	public static synthetic fun copy$default (Lme/proton/core/plan/presentation/compose/viewmodel/AccountStorageState$HighStorageUsage$Mail;ILme/proton/core/domain/entity/UserId;ILjava/lang/Object;)Lme/proton/core/plan/presentation/compose/viewmodel/AccountStorageState$HighStorageUsage$Mail;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPercentage ()I
	public fun getUserId ()Lme/proton/core/domain/entity/UserId;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/plan/presentation/compose/viewmodel/UpgradeStorageInfoViewModel : me/proton/core/presentation/viewmodel/ProtonViewModel {
	public static final field $stable I
	public fun <init> (Lme/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage;)V
	public final fun getState ()Lkotlinx/coroutines/flow/StateFlow;
}

public final class me/proton/core/plan/presentation/compose/viewmodel/UpgradeStorageInfoViewModel_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;)Lme/proton/core/plan/presentation/compose/viewmodel/UpgradeStorageInfoViewModel_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/plan/presentation/compose/viewmodel/UpgradeStorageInfoViewModel;
	public static fun newInstance (Lme/proton/core/plan/presentation/compose/usecase/ShouldUpgradeStorage;)Lme/proton/core/plan/presentation/compose/viewmodel/UpgradeStorageInfoViewModel;
}

public final class me/proton/core/plan/presentation/compose/viewmodel/UpgradeStorageInfoViewModel_HiltModules {
}

public abstract class me/proton/core/plan/presentation/compose/viewmodel/UpgradeStorageInfoViewModel_HiltModules$BindsModule {
	public abstract fun binds (Lme/proton/core/plan/presentation/compose/viewmodel/UpgradeStorageInfoViewModel;)Landroidx/lifecycle/ViewModel;
}

public final class me/proton/core/plan/presentation/compose/viewmodel/UpgradeStorageInfoViewModel_HiltModules$KeyModule {
	public static fun provide ()Ljava/lang/String;
}

public final class me/proton/core/plan/presentation/compose/viewmodel/UpgradeStorageInfoViewModel_HiltModules_KeyModule_ProvideFactory : dagger/internal/Factory {
	public fun <init> ()V
	public static fun create ()Lme/proton/core/plan/presentation/compose/viewmodel/UpgradeStorageInfoViewModel_HiltModules_KeyModule_ProvideFactory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Ljava/lang/String;
	public static fun provide ()Ljava/lang/String;
}

