public abstract interface class me/proton/core/auth/domain/AccountWorkflowHandler {
	public abstract fun handleAccountDisabled (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleAccountNotReady (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleAccountReady (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleCreateAddressFailed (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleCreateAddressNeeded (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleCreateAddressSuccess (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleSecondFactorFailed (Lme/proton/core/network/domain/session/SessionId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleSecondFactorSuccess (Lme/proton/core/network/domain/session/SessionId;Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleSession (Lme/proton/core/account/domain/entity/Account;Lme/proton/core/network/domain/session/Session;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleTwoPassModeFailed (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleTwoPassModeNeeded (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleTwoPassModeSuccess (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleUnlockFailed (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/LogTag {
	public static final field INSTANCE Lme/proton/core/auth/domain/LogTag;
	public static final field INVALID_SRP_PROOF Ljava/lang/String;
}

public abstract class me/proton/core/auth/domain/entity/AuthInfo {
}

public final class me/proton/core/auth/domain/entity/AuthInfo$Srp : me/proton/core/auth/domain/entity/AuthInfo {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Lme/proton/core/auth/domain/entity/SecondFactor;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()I
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Lme/proton/core/auth/domain/entity/SecondFactor;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Lme/proton/core/auth/domain/entity/SecondFactor;)Lme/proton/core/auth/domain/entity/AuthInfo$Srp;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/entity/AuthInfo$Srp;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Lme/proton/core/auth/domain/entity/SecondFactor;ILjava/lang/Object;)Lme/proton/core/auth/domain/entity/AuthInfo$Srp;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getModulus ()Ljava/lang/String;
	public final fun getSalt ()Ljava/lang/String;
	public final fun getSecondFactor ()Lme/proton/core/auth/domain/entity/SecondFactor;
	public final fun getServerEphemeral ()Ljava/lang/String;
	public final fun getSrpSession ()Ljava/lang/String;
	public final fun getUsername ()Ljava/lang/String;
	public final fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/entity/AuthInfo$Sso : me/proton/core/auth/domain/entity/AuthInfo {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lme/proton/core/auth/domain/entity/AuthInfo$Sso;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/entity/AuthInfo$Sso;Ljava/lang/String;ILjava/lang/Object;)Lme/proton/core/auth/domain/entity/AuthInfo$Sso;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getSsoChallengeToken ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/entity/AuthIntent : java/lang/Enum {
	public static final field AUTO Lme/proton/core/auth/domain/entity/AuthIntent;
	public static final field PROTON Lme/proton/core/auth/domain/entity/AuthIntent;
	public static final field SSO Lme/proton/core/auth/domain/entity/AuthIntent;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getValue ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lme/proton/core/auth/domain/entity/AuthIntent;
	public static fun values ()[Lme/proton/core/auth/domain/entity/AuthIntent;
}

public final class me/proton/core/auth/domain/entity/BillingDetails {
	public synthetic fun <init> (JLme/proton/core/payment/domain/entity/Currency;Lme/proton/core/payment/domain/entity/SubscriptionCycle;Ljava/lang/String;Ljava/lang/String;Lme/proton/core/plan/domain/entity/SubscriptionManagement;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()J
	public final fun component2 ()Lme/proton/core/payment/domain/entity/Currency;
	public final fun component3 ()Lme/proton/core/payment/domain/entity/SubscriptionCycle;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5-oTEqFM4 ()Ljava/lang/String;
	public final fun component6 ()Lme/proton/core/plan/domain/entity/SubscriptionManagement;
	public final fun copy-4KdbQwM (JLme/proton/core/payment/domain/entity/Currency;Lme/proton/core/payment/domain/entity/SubscriptionCycle;Ljava/lang/String;Ljava/lang/String;Lme/proton/core/plan/domain/entity/SubscriptionManagement;)Lme/proton/core/auth/domain/entity/BillingDetails;
	public static synthetic fun copy-4KdbQwM$default (Lme/proton/core/auth/domain/entity/BillingDetails;JLme/proton/core/payment/domain/entity/Currency;Lme/proton/core/payment/domain/entity/SubscriptionCycle;Ljava/lang/String;Ljava/lang/String;Lme/proton/core/plan/domain/entity/SubscriptionManagement;ILjava/lang/Object;)Lme/proton/core/auth/domain/entity/BillingDetails;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAmount ()J
	public final fun getCurrency ()Lme/proton/core/payment/domain/entity/Currency;
	public final fun getCycle ()Lme/proton/core/payment/domain/entity/SubscriptionCycle;
	public final fun getPlanName ()Ljava/lang/String;
	public final fun getSubscriptionManagement ()Lme/proton/core/plan/domain/entity/SubscriptionManagement;
	public final fun getToken-oTEqFM4 ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/entity/Modulus {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lme/proton/core/auth/domain/entity/Modulus;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/entity/Modulus;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lme/proton/core/auth/domain/entity/Modulus;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getModulus ()Ljava/lang/String;
	public final fun getModulusId ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/entity/ScopeInfo {
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Lme/proton/core/auth/domain/entity/ScopeInfo;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/entity/ScopeInfo;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lme/proton/core/auth/domain/entity/ScopeInfo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getScope ()Ljava/lang/String;
	public final fun getScopes ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class me/proton/core/auth/domain/entity/SecondFactor {
}

public final class me/proton/core/auth/domain/entity/SecondFactor$Disabled : me/proton/core/auth/domain/entity/SecondFactor {
	public static final field INSTANCE Lme/proton/core/auth/domain/entity/SecondFactor$Disabled;
}

public final class me/proton/core/auth/domain/entity/SecondFactor$Enabled : me/proton/core/auth/domain/entity/SecondFactor {
	public fun <init> (Ljava/util/Set;)V
	public final fun component1 ()Ljava/util/Set;
	public final fun copy (Ljava/util/Set;)Lme/proton/core/auth/domain/entity/SecondFactor$Enabled;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/entity/SecondFactor$Enabled;Ljava/util/Set;ILjava/lang/Object;)Lme/proton/core/auth/domain/entity/SecondFactor$Enabled;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getSupportedMethods ()Ljava/util/Set;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/entity/SecondFactorMethod : java/lang/Enum {
	public static final field Authenticator Lme/proton/core/auth/domain/entity/SecondFactorMethod;
	public static final field Totp Lme/proton/core/auth/domain/entity/SecondFactorMethod;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lme/proton/core/auth/domain/entity/SecondFactorMethod;
	public static fun values ()[Lme/proton/core/auth/domain/entity/SecondFactorMethod;
}

public abstract class me/proton/core/auth/domain/entity/SecondFactorProof {
}

public final class me/proton/core/auth/domain/entity/SecondFactorProof$SecondFactorCode : me/proton/core/auth/domain/entity/SecondFactorProof {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lme/proton/core/auth/domain/entity/SecondFactorProof$SecondFactorCode;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/entity/SecondFactorProof$SecondFactorCode;Ljava/lang/String;ILjava/lang/Object;)Lme/proton/core/auth/domain/entity/SecondFactorProof$SecondFactorCode;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/entity/SecondFactorProof$SecondFactorSignature : me/proton/core/auth/domain/entity/SecondFactorProof {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lme/proton/core/auth/domain/entity/SecondFactorProof$SecondFactorSignature;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/entity/SecondFactorProof$SecondFactorSignature;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lme/proton/core/auth/domain/entity/SecondFactorProof$SecondFactorSignature;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClientData ()Ljava/lang/String;
	public final fun getKeyHandle ()Ljava/lang/String;
	public final fun getSignatureData ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/entity/SessionInfo {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lme/proton/core/network/domain/session/SessionId;Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILme/proton/core/auth/domain/entity/SecondFactor;Z)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()I
	public final fun component11 ()I
	public final fun component12 ()Lme/proton/core/auth/domain/entity/SecondFactor;
	public final fun component13 ()Z
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Lme/proton/core/network/domain/session/SessionId;
	public final fun component6 ()Lme/proton/core/domain/entity/UserId;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lme/proton/core/network/domain/session/SessionId;Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILme/proton/core/auth/domain/entity/SecondFactor;Z)Lme/proton/core/auth/domain/entity/SessionInfo;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/entity/SessionInfo;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lme/proton/core/network/domain/session/SessionId;Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILme/proton/core/auth/domain/entity/SecondFactor;ZILjava/lang/Object;)Lme/proton/core/auth/domain/entity/SessionInfo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAccessToken ()Ljava/lang/String;
	public final fun getEventId ()Ljava/lang/String;
	public final fun getLocalId ()I
	public final fun getPasswordMode ()I
	public final fun getRefreshToken ()Ljava/lang/String;
	public final fun getScopes ()Ljava/util/List;
	public final fun getSecondFactor ()Lme/proton/core/auth/domain/entity/SecondFactor;
	public final fun getServerProof ()Ljava/lang/String;
	public final fun getSessionId ()Lme/proton/core/network/domain/session/SessionId;
	public final fun getTemporaryPassword ()Z
	public final fun getTokenType ()Ljava/lang/String;
	public final fun getUserId ()Lme/proton/core/domain/entity/UserId;
	public final fun getUsername ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isSecondFactorNeeded ()Z
	public final fun isTwoPassModeNeeded ()Z
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/exception/InvalidServerAuthenticationException : java/lang/IllegalArgumentException {
	public fun <init> (Ljava/lang/String;)V
}

public abstract interface class me/proton/core/auth/domain/repository/AuthRepository {
	public abstract fun getAuthInfoSrp (Lme/proton/core/network/domain/session/SessionId;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getAuthInfoSso (Lme/proton/core/network/domain/session/SessionId;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getScopes (Lme/proton/core/network/domain/session/SessionId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun performLogin (Ljava/lang/String;Lme/proton/core/crypto/common/srp/SrpProofs;Ljava/lang/String;Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun performLoginLess (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun performLoginSso (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun performSecondFactor (Lme/proton/core/network/domain/session/SessionId;Lme/proton/core/auth/domain/entity/SecondFactorProof;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun randomModulus (Lme/proton/core/network/domain/session/SessionId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun refreshSession (Lme/proton/core/network/domain/session/Session;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun requestSession (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun revokeSession (Lme/proton/core/network/domain/session/SessionId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun validateEmail (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun validatePhone (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/repository/AuthRepository$DefaultImpls {
	public static synthetic fun performLoginLess$default (Lme/proton/core/auth/domain/repository/AuthRepository;Ljava/util/List;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/testing/LoginTestHelper {
	public fun <init> (Lme/proton/core/accountmanager/domain/AccountManager;Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup;Lme/proton/core/account/domain/entity/AccountType;Lme/proton/core/auth/domain/usecase/CreateLoginSession;Lme/proton/core/crypto/common/keystore/KeyStoreCrypto;)V
	public final fun hasAccounts ()Z
	public final fun login (Ljava/lang/String;Ljava/lang/String;)Lme/proton/core/auth/domain/entity/SessionInfo;
	public final fun logout (Lme/proton/core/domain/entity/UserId;)V
	public final fun logoutAll ()V
}

public final class me/proton/core/auth/domain/usecase/AccountAvailability {
	public fun <init> (Lme/proton/core/user/domain/repository/UserRepository;Lme/proton/core/user/domain/repository/DomainRepository;)V
	public final fun checkExternalEmail (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun checkUsernameAuthenticated (Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun checkUsernameUnauthenticated (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getDomains (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUser (Lme/proton/core/domain/entity/UserId;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/CreateLoginLessSession {
	public fun <init> (Lme/proton/core/account/domain/entity/AccountType;Lme/proton/core/auth/domain/AccountWorkflowHandler;Lme/proton/core/auth/domain/usecase/PerformLoginLess;)V
	public final fun invoke (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/CreateLoginSession {
	public fun <init> (Lme/proton/core/auth/domain/AccountWorkflowHandler;Lme/proton/core/auth/domain/usecase/PerformLogin;)V
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;Lme/proton/core/account/domain/entity/AccountType;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/CreateLoginSsoSession {
	public fun <init> (Lme/proton/core/auth/domain/AccountWorkflowHandler;Lme/proton/core/auth/domain/usecase/PerformLoginSso;)V
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;Lme/proton/core/account/domain/entity/AccountType;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/GetAuthInfoSrp {
	public fun <init> (Lme/proton/core/auth/domain/repository/AuthRepository;)V
	public final fun invoke (Lme/proton/core/network/domain/session/SessionId;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/GetAuthInfoSso {
	public fun <init> (Lme/proton/core/auth/domain/repository/AuthRepository;)V
	public final fun invoke (Lme/proton/core/network/domain/session/SessionId;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/GetPrimaryUser {
	public fun <init> (Lme/proton/core/account/domain/repository/AccountRepository;Lme/proton/core/user/domain/repository/UserRepository;)V
	public final fun invoke (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class me/proton/core/auth/domain/usecase/IsCredentialLessEnabled {
	public abstract fun awaitIsRemoteDisabled-8Mi8wO0 (Lme/proton/core/domain/entity/UserId;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun invoke (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun isLocalEnabled ()Z
}

public final class me/proton/core/auth/domain/usecase/IsCredentialLessEnabled$DefaultImpls {
	public static synthetic fun awaitIsRemoteDisabled-8Mi8wO0$default (Lme/proton/core/auth/domain/usecase/IsCredentialLessEnabled;Lme/proton/core/domain/entity/UserId;JLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun invoke$default (Lme/proton/core/auth/domain/usecase/IsCredentialLessEnabled;Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class me/proton/core/auth/domain/usecase/IsSsoCustomTabEnabled {
	public abstract fun invoke ()Z
}

public abstract interface class me/proton/core/auth/domain/usecase/IsSsoEnabled {
	public abstract fun invoke ()Z
}

public final class me/proton/core/auth/domain/usecase/LoginChallengeConfig : me/proton/core/challenge/domain/ChallengeConfig {
	public static final field Companion Lme/proton/core/auth/domain/usecase/LoginChallengeConfig$Companion;
	public static final field LOGIN_FRAME_USERNAME Ljava/lang/String;
	public fun <init> ()V
	public fun getFlowFrames ()Ljava/util/List;
	public fun getFlowName ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/usecase/LoginChallengeConfig$Companion {
}

public final class me/proton/core/auth/domain/usecase/PerformLogin {
	public fun <init> (Lme/proton/core/auth/domain/repository/AuthRepository;Lme/proton/core/crypto/common/srp/SrpCrypto;Lme/proton/core/crypto/common/keystore/KeyStoreCrypto;Lme/proton/core/challenge/domain/ChallengeManager;Lme/proton/core/auth/domain/usecase/LoginChallengeConfig;)V
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/PerformLoginLess {
	public fun <init> (Lme/proton/core/auth/domain/repository/AuthRepository;)V
	public final fun invoke (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/PerformLoginSso {
	public fun <init> (Lme/proton/core/auth/domain/repository/AuthRepository;)V
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/PerformLogout {
	public fun <init> (Lme/proton/core/auth/domain/repository/AuthRepository;)V
	public final fun invoke (Lme/proton/core/network/domain/session/SessionId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/PerformSecondFactor {
	public fun <init> (Lme/proton/core/auth/domain/repository/AuthRepository;)V
	public final fun invoke (Lme/proton/core/network/domain/session/SessionId;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/PostLoginAccountSetup {
	public fun <init> (Lme/proton/core/auth/domain/AccountWorkflowHandler;Lme/proton/core/plan/domain/usecase/PerformSubscribe;Lme/proton/core/auth/domain/usecase/SetupAccountCheck;Lme/proton/core/auth/domain/usecase/SetupExternalAddressKeys;Lme/proton/core/auth/domain/usecase/SetupInternalAddress;Lme/proton/core/auth/domain/usecase/SetupPrimaryKeys;Lme/proton/core/auth/domain/usecase/UnlockUserPrimaryKey;Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheck;Lme/proton/core/user/domain/UserManager;Lme/proton/core/accountmanager/domain/SessionManager;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Lme/proton/core/account/domain/entity/AccountType;ZZZLkotlin/jvm/functions/Function1;Lme/proton/core/auth/domain/entity/BillingDetails;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun invoke$default (Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup;Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Lme/proton/core/account/domain/entity/AccountType;ZZZLkotlin/jvm/functions/Function1;Lme/proton/core/auth/domain/entity/BillingDetails;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract class me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result {
}

public abstract class me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Error : me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result {
}

public final class me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Error$UnlockPrimaryKeyError : me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Error {
	public fun <init> (Lme/proton/core/user/domain/UserManager$UnlockResult$Error;)V
	public final fun component1 ()Lme/proton/core/user/domain/UserManager$UnlockResult$Error;
	public final fun copy (Lme/proton/core/user/domain/UserManager$UnlockResult$Error;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Error$UnlockPrimaryKeyError;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Error$UnlockPrimaryKeyError;Lme/proton/core/user/domain/UserManager$UnlockResult$Error;ILjava/lang/Object;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Error$UnlockPrimaryKeyError;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getError ()Lme/proton/core/user/domain/UserManager$UnlockResult$Error;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Error$UserCheckError : me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Error {
	public fun <init> (Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheckResult$Error;)V
	public final fun component1 ()Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheckResult$Error;
	public final fun copy (Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheckResult$Error;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Error$UserCheckError;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Error$UserCheckError;Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheckResult$Error;ILjava/lang/Object;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Error$UserCheckError;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getError ()Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheckResult$Error;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need : me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result {
}

public final class me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$ChangePassword : me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need {
	public fun <init> (Lme/proton/core/domain/entity/UserId;)V
	public final fun component1 ()Lme/proton/core/domain/entity/UserId;
	public final fun copy (Lme/proton/core/domain/entity/UserId;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$ChangePassword;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$ChangePassword;Lme/proton/core/domain/entity/UserId;ILjava/lang/Object;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$ChangePassword;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getUserId ()Lme/proton/core/domain/entity/UserId;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$ChooseUsername : me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need {
	public fun <init> (Lme/proton/core/domain/entity/UserId;)V
	public final fun component1 ()Lme/proton/core/domain/entity/UserId;
	public final fun copy (Lme/proton/core/domain/entity/UserId;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$ChooseUsername;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$ChooseUsername;Lme/proton/core/domain/entity/UserId;ILjava/lang/Object;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$ChooseUsername;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getUserId ()Lme/proton/core/domain/entity/UserId;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$SecondFactor : me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need {
	public fun <init> (Lme/proton/core/domain/entity/UserId;)V
	public final fun component1 ()Lme/proton/core/domain/entity/UserId;
	public final fun copy (Lme/proton/core/domain/entity/UserId;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$SecondFactor;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$SecondFactor;Lme/proton/core/domain/entity/UserId;ILjava/lang/Object;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$SecondFactor;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getUserId ()Lme/proton/core/domain/entity/UserId;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$TwoPassMode : me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need {
	public fun <init> (Lme/proton/core/domain/entity/UserId;)V
	public final fun component1 ()Lme/proton/core/domain/entity/UserId;
	public final fun copy (Lme/proton/core/domain/entity/UserId;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$TwoPassMode;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$TwoPassMode;Lme/proton/core/domain/entity/UserId;ILjava/lang/Object;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$Need$TwoPassMode;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getUserId ()Lme/proton/core/domain/entity/UserId;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$UserUnlocked : me/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result {
	public fun <init> (Lme/proton/core/domain/entity/UserId;)V
	public final fun component1 ()Lme/proton/core/domain/entity/UserId;
	public final fun copy (Lme/proton/core/domain/entity/UserId;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$UserUnlocked;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$UserUnlocked;Lme/proton/core/domain/entity/UserId;ILjava/lang/Object;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$Result$UserUnlocked;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getUserId ()Lme/proton/core/domain/entity/UserId;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class me/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheck {
	public abstract fun invoke (Lme/proton/core/user/domain/entity/User;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class me/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheckResult {
}

public final class me/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheckResult$Error : me/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheckResult {
	public fun <init> (Ljava/lang/String;Lme/proton/core/auth/domain/usecase/UserCheckAction;)V
	public synthetic fun <init> (Ljava/lang/String;Lme/proton/core/auth/domain/usecase/UserCheckAction;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lme/proton/core/auth/domain/usecase/UserCheckAction;
	public final fun copy (Ljava/lang/String;Lme/proton/core/auth/domain/usecase/UserCheckAction;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheckResult$Error;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheckResult$Error;Ljava/lang/String;Lme/proton/core/auth/domain/usecase/UserCheckAction;ILjava/lang/Object;)Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheckResult$Error;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAction ()Lme/proton/core/auth/domain/usecase/UserCheckAction;
	public final fun getLocalizedMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheckResult$Success : me/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheckResult {
	public static final field INSTANCE Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheckResult$Success;
}

public final class me/proton/core/auth/domain/usecase/PostLoginLessAccountSetup {
	public fun <init> (Lme/proton/core/auth/domain/AccountWorkflowHandler;Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheck;Lme/proton/core/user/domain/UserManager;Lme/proton/core/accountmanager/domain/SessionManager;Lme/proton/core/network/domain/server/ServerClock;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/PostLoginSsoAccountSetup {
	public fun <init> (Lme/proton/core/auth/domain/AccountWorkflowHandler;Lme/proton/core/auth/domain/usecase/PostLoginAccountSetup$UserCheck;Lme/proton/core/user/domain/UserManager;Lme/proton/core/accountmanager/domain/SessionManager;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/RecoverableErrorsKt {
	public static final fun primaryKeyExists (Ljava/lang/Throwable;)Z
	public static final fun userAlreadyExists (Ljava/lang/Throwable;)Z
}

public final class me/proton/core/auth/domain/usecase/SetupAccountCheck {
	public fun <init> (Lme/proton/core/domain/entity/Product;Lme/proton/core/user/domain/repository/UserRepository;Lme/proton/core/user/domain/repository/UserAddressRepository;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;ZLme/proton/core/account/domain/entity/AccountType;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class me/proton/core/auth/domain/usecase/SetupAccountCheck$Result {
}

public final class me/proton/core/auth/domain/usecase/SetupAccountCheck$Result$ChangePasswordNeeded : me/proton/core/auth/domain/usecase/SetupAccountCheck$Result {
	public static final field INSTANCE Lme/proton/core/auth/domain/usecase/SetupAccountCheck$Result$ChangePasswordNeeded;
}

public final class me/proton/core/auth/domain/usecase/SetupAccountCheck$Result$ChooseUsernameNeeded : me/proton/core/auth/domain/usecase/SetupAccountCheck$Result {
	public static final field INSTANCE Lme/proton/core/auth/domain/usecase/SetupAccountCheck$Result$ChooseUsernameNeeded;
}

public final class me/proton/core/auth/domain/usecase/SetupAccountCheck$Result$NoSetupNeeded : me/proton/core/auth/domain/usecase/SetupAccountCheck$Result {
	public static final field INSTANCE Lme/proton/core/auth/domain/usecase/SetupAccountCheck$Result$NoSetupNeeded;
}

public final class me/proton/core/auth/domain/usecase/SetupAccountCheck$Result$SetupExternalAddressKeysNeeded : me/proton/core/auth/domain/usecase/SetupAccountCheck$Result {
	public static final field INSTANCE Lme/proton/core/auth/domain/usecase/SetupAccountCheck$Result$SetupExternalAddressKeysNeeded;
}

public final class me/proton/core/auth/domain/usecase/SetupAccountCheck$Result$SetupInternalAddressNeeded : me/proton/core/auth/domain/usecase/SetupAccountCheck$Result {
	public static final field INSTANCE Lme/proton/core/auth/domain/usecase/SetupAccountCheck$Result$SetupInternalAddressNeeded;
}

public final class me/proton/core/auth/domain/usecase/SetupAccountCheck$Result$SetupPrimaryKeysNeeded : me/proton/core/auth/domain/usecase/SetupAccountCheck$Result {
	public static final field INSTANCE Lme/proton/core/auth/domain/usecase/SetupAccountCheck$Result$SetupPrimaryKeysNeeded;
}

public final class me/proton/core/auth/domain/usecase/SetupAccountCheck$Result$TwoPassNeeded : me/proton/core/auth/domain/usecase/SetupAccountCheck$Result {
	public static final field INSTANCE Lme/proton/core/auth/domain/usecase/SetupAccountCheck$Result$TwoPassNeeded;
}

public final class me/proton/core/auth/domain/usecase/SetupExternalAddressKeys {
	public fun <init> (Lme/proton/core/user/domain/UserAddressManager;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/SetupInternalAddress {
	public fun <init> (Lme/proton/core/user/domain/UserAddressManager;Lme/proton/core/user/domain/repository/UserRepository;Lme/proton/core/user/domain/repository/DomainRepository;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun invoke$default (Lme/proton/core/auth/domain/usecase/SetupInternalAddress;Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/SetupPrimaryKeys {
	public fun <init> (Lme/proton/core/user/domain/UserManager;Lme/proton/core/user/domain/repository/UserAddressRepository;Lme/proton/core/auth/domain/repository/AuthRepository;Lme/proton/core/user/domain/repository/DomainRepository;Lme/proton/core/network/domain/session/SessionProvider;Lme/proton/core/crypto/common/srp/SrpCrypto;Lme/proton/core/crypto/common/keystore/KeyStoreCrypto;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Lme/proton/core/account/domain/entity/AccountType;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/UnlockUserPrimaryKey {
	public fun <init> (Lme/proton/core/user/domain/UserManager;Lme/proton/core/crypto/common/keystore/KeyStoreCrypto;Lme/proton/core/domain/entity/Product;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class me/proton/core/auth/domain/usecase/UserCheckAction {
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getName ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/usecase/UserCheckAction$OpenUrl : me/proton/core/auth/domain/usecase/UserCheckAction {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lme/proton/core/auth/domain/usecase/UserCheckAction$OpenUrl;
	public static synthetic fun copy$default (Lme/proton/core/auth/domain/usecase/UserCheckAction$OpenUrl;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lme/proton/core/auth/domain/usecase/UserCheckAction$OpenUrl;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/usecase/ValidateServerProof {
	public fun <init> ()V
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
}

public final class me/proton/core/auth/domain/usecase/scopes/ObtainLockedScope {
	public fun <init> (Lme/proton/core/auth/domain/repository/AuthRepository;Lme/proton/core/user/domain/repository/UserRepository;Lme/proton/core/crypto/common/context/CryptoContext;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;Lme/proton/core/network/domain/session/SessionId;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/scopes/ObtainPasswordScope {
	public fun <init> (Lme/proton/core/auth/domain/repository/AuthRepository;Lme/proton/core/user/domain/repository/UserRepository;Lme/proton/core/crypto/common/context/CryptoContext;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;Lme/proton/core/network/domain/session/SessionId;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/scopes/RemoveSecurityScopes {
	public fun <init> (Lme/proton/core/user/domain/repository/UserRepository;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/signup/PerformCreateExternalEmailUser {
	public fun <init> (Lme/proton/core/auth/domain/repository/AuthRepository;Lme/proton/core/user/domain/repository/UserRepository;Lme/proton/core/crypto/common/srp/SrpCrypto;Lme/proton/core/crypto/common/keystore/KeyStoreCrypto;Lme/proton/core/challenge/domain/ChallengeManager;Lme/proton/core/auth/domain/usecase/signup/SignupChallengeConfig;Lme/proton/core/auth/domain/usecase/GetPrimaryUser;)V
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/signup/PerformCreateUser {
	public fun <init> (Lme/proton/core/auth/domain/repository/AuthRepository;Lme/proton/core/user/domain/repository/UserRepository;Lme/proton/core/crypto/common/srp/SrpCrypto;Lme/proton/core/crypto/common/keystore/KeyStoreCrypto;Lme/proton/core/challenge/domain/ChallengeManager;Lme/proton/core/auth/domain/usecase/signup/SignupChallengeConfig;Lme/proton/core/auth/domain/usecase/GetPrimaryUser;)V
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lme/proton/core/user/domain/entity/CreateUserType;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/signup/SignupChallengeConfig : me/proton/core/challenge/domain/ChallengeConfig {
	public static final field Companion Lme/proton/core/auth/domain/usecase/signup/SignupChallengeConfig$Companion;
	public static final field SIGN_UP_FRAME_RECOVERY Ljava/lang/String;
	public static final field SIGN_UP_FRAME_USERNAME Ljava/lang/String;
	public fun <init> ()V
	public fun getFlowFrames ()Ljava/util/List;
	public fun getFlowName ()Ljava/lang/String;
}

public final class me/proton/core/auth/domain/usecase/signup/SignupChallengeConfig$Companion {
}

public final class me/proton/core/auth/domain/usecase/signup/ValidateEmail {
	public fun <init> (Lme/proton/core/auth/domain/repository/AuthRepository;)V
	public final fun invoke (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/auth/domain/usecase/signup/ValidatePhone {
	public fun <init> (Lme/proton/core/auth/domain/repository/AuthRepository;)V
	public final fun invoke (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

