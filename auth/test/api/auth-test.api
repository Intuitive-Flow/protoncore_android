public abstract interface class me/proton/core/auth/test/BaseConvertExternalToInternalAccountTests {
	public abstract fun accountWithTwoPasswordMode ()V
	public abstract fun accountWithUnavailableUsername ()V
	public abstract fun chooseInternalAddressIsClosed ()V
	public abstract fun externalAccountWithAddressButNoAddressKey ()V
	public abstract fun getQuark ()Lme/proton/core/test/quark/Quark;
	public abstract fun getTestUser ()Lme/proton/core/test/quark/data/User;
	public abstract fun getTestUsername ()Ljava/lang/String;
	public abstract fun happyPath ()V
	public abstract fun prepare ()V
	public abstract fun setTestUser (Lme/proton/core/test/quark/data/User;)V
	public abstract fun setTestUsername (Ljava/lang/String;)V
	public abstract fun verifyLoggedOut ()V
	public abstract fun verifySuccessfulLogin ()V
}

public final class me/proton/core/auth/test/BaseConvertExternalToInternalAccountTests$DefaultImpls {
	public static fun accountWithTwoPasswordMode (Lme/proton/core/auth/test/BaseConvertExternalToInternalAccountTests;)V
	public static fun accountWithUnavailableUsername (Lme/proton/core/auth/test/BaseConvertExternalToInternalAccountTests;)V
	public static fun chooseInternalAddressIsClosed (Lme/proton/core/auth/test/BaseConvertExternalToInternalAccountTests;)V
	public static fun externalAccountWithAddressButNoAddressKey (Lme/proton/core/auth/test/BaseConvertExternalToInternalAccountTests;)V
	public static fun happyPath (Lme/proton/core/auth/test/BaseConvertExternalToInternalAccountTests;)V
	public static fun prepare (Lme/proton/core/auth/test/BaseConvertExternalToInternalAccountTests;)V
}

public abstract interface class me/proton/core/auth/test/BaseExternalAccountSignupTests {
	public abstract fun externalSignupNotSupported ()V
	public abstract fun getExtraHeaderProvider ()Lme/proton/core/network/domain/client/ExtraHeaderProvider;
	public abstract fun getGetAvailablePaymentProviders ()Lme/proton/core/payment/domain/usecase/GetAvailablePaymentProviders;
	public abstract fun getQuark ()Lme/proton/core/test/quark/Quark;
	public abstract fun getTestUser ()Lme/proton/core/test/quark/data/User;
	public abstract fun happyPath ()V
	public abstract fun incorrectEmailVerificationCode ()V
	public abstract fun setTestUser (Lme/proton/core/test/quark/data/User;)V
	public abstract fun setUp ()V
	public abstract fun switchToInternalAndBack ()V
}

public final class me/proton/core/auth/test/BaseExternalAccountSignupTests$DefaultImpls {
	public static fun externalSignupNotSupported (Lme/proton/core/auth/test/BaseExternalAccountSignupTests;)V
	public static fun happyPath (Lme/proton/core/auth/test/BaseExternalAccountSignupTests;)V
	public static fun incorrectEmailVerificationCode (Lme/proton/core/auth/test/BaseExternalAccountSignupTests;)V
	public static fun setUp (Lme/proton/core/auth/test/BaseExternalAccountSignupTests;)V
	public static fun switchToInternalAndBack (Lme/proton/core/auth/test/BaseExternalAccountSignupTests;)V
}

public abstract interface class me/proton/core/auth/test/BaseUsernameAccountLoginTests {
	public abstract fun getInternalUsers ()Lme/proton/core/test/quark/data/User$Users;
	public abstract fun getQuark ()Lme/proton/core/test/quark/Quark;
	public abstract fun getVpnUsers ()Lme/proton/core/test/quark/data/User$Users;
	public abstract fun loginWithFreeInternalAccount ()V
	public abstract fun loginWithVpnUsernameAccount ()V
	public abstract fun prepare ()V
	public abstract fun verifySuccessfulLogin ()V
}

public final class me/proton/core/auth/test/BaseUsernameAccountLoginTests$DefaultImpls {
	public static fun loginWithFreeInternalAccount (Lme/proton/core/auth/test/BaseUsernameAccountLoginTests;)V
	public static fun loginWithVpnUsernameAccount (Lme/proton/core/auth/test/BaseUsernameAccountLoginTests;)V
	public static fun prepare (Lme/proton/core/auth/test/BaseUsernameAccountLoginTests;)V
}

public abstract interface class me/proton/core/auth/test/BaseUsernameAccountSignupTests {
	public abstract fun getGetAvailablePaymentProviders ()Lme/proton/core/payment/domain/usecase/GetAvailablePaymentProviders;
	public abstract fun getQuark ()Lme/proton/core/test/quark/Quark;
	public abstract fun getVpnUsers ()Lme/proton/core/test/quark/data/User$Users;
	public abstract fun happyPath ()V
	public abstract fun prepare ()V
	public abstract fun verifySuccessfulSignup ()V
}

public final class me/proton/core/auth/test/BaseUsernameAccountSignupTests$DefaultImpls {
	public static fun happyPath (Lme/proton/core/auth/test/BaseUsernameAccountSignupTests;)V
	public static fun prepare (Lme/proton/core/auth/test/BaseUsernameAccountSignupTests;)V
}

public final class me/proton/core/auth/test/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public abstract interface class me/proton/core/auth/test/MinimalSSOSignInTests {
	public abstract fun getLocalAuthFlags ()Lme/proton/core/auth/domain/LocalAuthFlags;
	public abstract fun getQuark ()Lme/proton/core/test/quark/Quark;
	public abstract fun setUp ()V
	public abstract fun ssoSignInHappyPath ()V
}

public final class me/proton/core/auth/test/MinimalSSOSignInTests$DefaultImpls {
	public static fun setUp (Lme/proton/core/auth/test/MinimalSSOSignInTests;)V
	public static fun ssoSignInHappyPath (Lme/proton/core/auth/test/MinimalSSOSignInTests;)V
}

public abstract interface class me/proton/core/auth/test/MinimalSignInInternalTests {
	public abstract fun getIntentsRule ()Landroidx/test/espresso/intent/rule/IntentsRule;
	public abstract fun getQuark ()Lme/proton/core/test/quark/Quark;
	public abstract fun getUsers ()Lme/proton/core/test/quark/data/User$Users;
	public abstract fun opensHelp ()V
	public abstract fun signInExternalHappyPath ()V
	public abstract fun signInInternalHappyPath ()V
	public abstract fun signInInternalTwoPassHappyPath ()V
	public abstract fun verifyAfter ()V
}

public final class me/proton/core/auth/test/MinimalSignInInternalTests$DefaultImpls {
	public static fun opensHelp (Lme/proton/core/auth/test/MinimalSignInInternalTests;)V
	public static fun signInExternalHappyPath (Lme/proton/core/auth/test/MinimalSignInInternalTests;)V
	public static fun signInInternalHappyPath (Lme/proton/core/auth/test/MinimalSignInInternalTests;)V
	public static fun signInInternalTwoPassHappyPath (Lme/proton/core/auth/test/MinimalSignInInternalTests;)V
}

public abstract interface class me/proton/core/auth/test/MinimalSignUpExternalTests {
	public abstract fun isCongratsDisplayed ()Z
	public abstract fun signupExternalAccountHappyPath ()V
	public abstract fun signupSwitchToInternalAccountHappyPath ()V
	public abstract fun verifyAfter ()V
}

public final class me/proton/core/auth/test/MinimalSignUpExternalTests$DefaultImpls {
	public static fun signupExternalAccountHappyPath (Lme/proton/core/auth/test/MinimalSignUpExternalTests;)V
	public static fun signupSwitchToInternalAccountHappyPath (Lme/proton/core/auth/test/MinimalSignUpExternalTests;)V
}

public final class me/proton/core/auth/test/flow/SignInFlow {
	public static final field INSTANCE Lme/proton/core/auth/test/flow/SignInFlow;
	public final fun signInExternal (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun signInInternal (Ljava/lang/String;Ljava/lang/String;)V
	public final fun signInInternalTwoPass (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
}

public final class me/proton/core/auth/test/flow/SignUpFlow {
	public static final field INSTANCE Lme/proton/core/auth/test/flow/SignUpFlow;
	public final fun signUpExternalEmail (Ljava/lang/String;)V
	public final fun signUpInternal (Ljava/lang/String;)V
}

public final class me/proton/core/auth/test/robot/AddAccountRobot {
	public static final field INSTANCE Lme/proton/core/auth/test/robot/AddAccountRobot;
	public final fun clickSignIn ()Lme/proton/core/auth/test/robot/login/LoginRobot;
	public final fun clickSignUp ()Lme/proton/core/auth/test/robot/signup/SignUpRobot;
	public final fun uiElementsDisplayed ()V
}

public final class me/proton/core/auth/test/robot/login/LoginHelpRobot {
	public static final field INSTANCE Lme/proton/core/auth/test/robot/login/LoginHelpRobot;
	public final fun customerSupport ()V
	public final fun forgotPassword ()Lme/proton/core/auth/test/robot/login/LoginHelpRobot;
	public final fun forgotPasswordBrowserOpened ()V
	public final fun forgotUsername ()Lme/proton/core/auth/test/robot/login/LoginHelpRobot;
	public final fun forgotUsernameBrowserOpened ()V
	public final fun otherIssues ()Lme/proton/core/auth/test/robot/login/LoginHelpRobot;
	public final fun otherIssuesBrowserOpened ()V
}

public final class me/proton/core/auth/test/robot/login/LoginRobot {
	public static final field INSTANCE Lme/proton/core/auth/test/robot/login/LoginRobot;
	public final fun fillPassword (Ljava/lang/String;)Lme/proton/core/auth/test/robot/login/LoginRobot;
	public final fun fillUsername (Ljava/lang/String;)Lme/proton/core/auth/test/robot/login/LoginRobot;
	public final fun help ()V
	public final fun login ()V
	public final fun signInWithSSO ()V
}

public final class me/proton/core/auth/test/robot/login/TwoPassRobot {
	public static final field INSTANCE Lme/proton/core/auth/test/robot/login/TwoPassRobot;
	public final fun fillMailboxPassword (Ljava/lang/String;)Lme/proton/core/auth/test/robot/login/TwoPassRobot;
	public final fun unlock ()V
}

public final class me/proton/core/auth/test/robot/signup/ChooseInternalAddressRobot {
	public static final field INSTANCE Lme/proton/core/auth/test/robot/signup/ChooseInternalAddressRobot;
	public final fun cancel ()V
	public final fun continueButtonIsEnabled ()V
	public final fun domainInputDisplayed ()V
	public final fun fillUsername (Ljava/lang/String;)Lme/proton/core/auth/test/robot/signup/ChooseInternalAddressRobot;
	public final fun next ()V
	public final fun selectAlternativeDomain ()Lme/proton/core/auth/test/robot/signup/ChooseInternalAddressRobot;
	public final fun selectPrimaryDomain ()Lme/proton/core/auth/test/robot/signup/ChooseInternalAddressRobot;
	public final fun usernameInputIsEmpty ()V
	public final fun usernameInputIsFilled (Ljava/lang/String;)V
}

public final class me/proton/core/auth/test/robot/signup/CongratsRobot {
	public static final field INSTANCE Lme/proton/core/auth/test/robot/signup/CongratsRobot;
	public final fun clickStart ()V
	public final fun uiElementsDisplayed ()V
}

public final class me/proton/core/auth/test/robot/signup/ForExternalRobot {
	public static final field INSTANCE Lme/proton/core/auth/test/robot/signup/ForExternalRobot;
	public final fun clickNext ()Lme/proton/core/humanverification/test/robot/HvCodeRobot;
	public final fun clickSwitch ()Lme/proton/core/auth/test/robot/signup/ForInternalRobot;
	public final fun fillEmail (Ljava/lang/String;)Lme/proton/core/auth/test/robot/signup/ForExternalRobot;
	public final fun uiElementsDisplayed ()V
}

public final class me/proton/core/auth/test/robot/signup/ForInternalRobot {
	public static final field INSTANCE Lme/proton/core/auth/test/robot/signup/ForInternalRobot;
	public final fun clickNext ()V
	public final fun clickSwitch ()V
	public final fun fillUsername (Ljava/lang/String;)Lme/proton/core/auth/test/robot/signup/ForInternalRobot;
	public final fun uiElementsDisplayed ()V
}

public final class me/proton/core/auth/test/robot/signup/ForUsernameRobot {
	public static final field INSTANCE Lme/proton/core/auth/test/robot/signup/ForUsernameRobot;
	public final fun clickNext ()V
	public final fun fillUsername (Ljava/lang/String;)Lme/proton/core/auth/test/robot/signup/ForUsernameRobot;
	public final fun uiElementsDisplayed ()V
}

public final class me/proton/core/auth/test/robot/signup/RecoveryMethodRobot {
	public static final field INSTANCE Lme/proton/core/auth/test/robot/signup/RecoveryMethodRobot;
	public final fun skip ()Lme/proton/core/auth/test/robot/signup/RecoveryMethodRobot$SkipRecoveryAlertRobot;
}

public final class me/proton/core/auth/test/robot/signup/RecoveryMethodRobot$SkipRecoveryAlertRobot {
	public static final field INSTANCE Lme/proton/core/auth/test/robot/signup/RecoveryMethodRobot$SkipRecoveryAlertRobot;
	public final fun setRecoveryMethod ()Lme/proton/core/auth/test/robot/signup/RecoveryMethodRobot;
	public final fun skipConfirm ()V
}

public final class me/proton/core/auth/test/robot/signup/SetPasswordRobot {
	public static final field INSTANCE Lme/proton/core/auth/test/robot/signup/SetPasswordRobot;
	public final fun clickNext ()V
	public final fun fillAndClickNext (Ljava/lang/String;)V
	public final fun fillConfirm (Ljava/lang/String;)Lme/proton/core/auth/test/robot/signup/SetPasswordRobot;
	public final fun fillPassword (Ljava/lang/String;)Lme/proton/core/auth/test/robot/signup/SetPasswordRobot;
	public final fun uiElementsDisplayed ()V
}

public final class me/proton/core/auth/test/robot/signup/SignUpRobot {
	public static final field INSTANCE Lme/proton/core/auth/test/robot/signup/SignUpRobot;
	public final fun forExternal ()Lme/proton/core/auth/test/robot/signup/ForExternalRobot;
	public final fun forInternal ()Lme/proton/core/auth/test/robot/signup/ForInternalRobot;
	public final fun forUsername ()Lme/proton/core/auth/test/robot/signup/ForUsernameRobot;
}

public final class me/proton/core/auth/test/rule/AcceptExternalRule : org/junit/rules/ExternalResource {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public fun after ()V
	public fun before ()V
}

public final class me/proton/core/auth/test/usecase/WaitForNoPrimaryAccount {
	public fun <init> (Lme/proton/core/accountmanager/domain/AccountManager;)V
	public final fun invoke-LRDsOJo (J)V
	public static synthetic fun invoke-LRDsOJo$default (Lme/proton/core/auth/test/usecase/WaitForNoPrimaryAccount;JILjava/lang/Object;)V
}

public final class me/proton/core/auth/test/usecase/WaitForPrimaryAccount {
	public fun <init> (Lme/proton/core/accountmanager/domain/AccountManager;)V
	public final fun invoke-HG0u8IE (Lme/proton/core/account/domain/entity/AccountState;J)Lme/proton/core/account/domain/entity/Account;
	public static synthetic fun invoke-HG0u8IE$default (Lme/proton/core/auth/test/usecase/WaitForPrimaryAccount;Lme/proton/core/account/domain/entity/AccountState;JILjava/lang/Object;)Lme/proton/core/account/domain/entity/Account;
}

