public final class me/proton/core/country/data/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class me/proton/core/country/data/entity/CountriesDataModel {
	public static final field Companion Lme/proton/core/country/data/entity/CountriesDataModel$Companion;
	public synthetic fun <init> (ILjava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lme/proton/core/country/data/entity/CountriesDataModel;
	public static synthetic fun copy$default (Lme/proton/core/country/data/entity/CountriesDataModel;Ljava/util/List;ILjava/lang/Object;)Lme/proton/core/country/data/entity/CountriesDataModel;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCountries ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Lme/proton/core/country/data/entity/CountriesDataModel;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class me/proton/core/country/data/entity/CountriesDataModel$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/country/data/entity/CountriesDataModel$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/country/data/entity/CountriesDataModel;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/country/data/entity/CountriesDataModel;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/country/data/entity/CountriesDataModel$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/country/data/entity/CountryDataModel {
	public static final field Companion Lme/proton/core/country/data/entity/CountryDataModel$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;I)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()I
	public final fun copy (Ljava/lang/String;Ljava/lang/String;I)Lme/proton/core/country/data/entity/CountryDataModel;
	public static synthetic fun copy$default (Lme/proton/core/country/data/entity/CountryDataModel;Ljava/lang/String;Ljava/lang/String;IILjava/lang/Object;)Lme/proton/core/country/data/entity/CountryDataModel;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCallingCode ()I
	public final fun getCode ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Lme/proton/core/country/data/entity/CountryDataModel;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class me/proton/core/country/data/entity/CountryDataModel$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/country/data/entity/CountryDataModel$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/country/data/entity/CountryDataModel;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/country/data/entity/CountryDataModel;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/country/data/entity/CountryDataModel$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/country/data/repository/CountriesRepositoryImpl : me/proton/core/country/domain/repository/CountriesRepository {
	public static final field Companion Lme/proton/core/country/data/repository/CountriesRepositoryImpl$Companion;
	public static final field FILE_NAME_ALL_COUNTRIES Ljava/lang/String;
	public fun <init> (Landroid/content/Context;Lkotlinx/coroutines/CoroutineDispatcher;)V
	public synthetic fun <init> (Landroid/content/Context;Lkotlinx/coroutines/CoroutineDispatcher;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getAllCountriesSorted (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCountry (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/country/data/repository/CountriesRepositoryImpl$Companion {
}

