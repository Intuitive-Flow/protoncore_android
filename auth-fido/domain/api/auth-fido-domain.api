public final class me/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs {
	public static final field Companion Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Boolean;
	public final fun component3 ()Ljava/lang/Boolean;
	public final fun copy (Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;)Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs;
	public static synthetic fun copy$default (Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;ILjava/lang/Object;)Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAppId ()Ljava/lang/String;
	public final fun getThirdPartyPayment ()Ljava/lang/Boolean;
	public final fun getUvm ()Ljava/lang/Boolean;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/auth/fido/domain/entity/Fido2AuthenticationOptions {
	public static final field Companion Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationOptions$Companion;
	public fun <init> (Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions;)V
	public final fun component1 ()Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions;
	public final fun copy (Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions;)Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationOptions;
	public static synthetic fun copy$default (Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationOptions;Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions;ILjava/lang/Object;)Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationOptions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPublicKey ()Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/fido/domain/entity/Fido2AuthenticationOptions$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationOptions$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationOptions;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationOptions;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/auth/fido/domain/entity/Fido2AuthenticationOptions$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialDescriptor {
	public static final field Companion Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialDescriptor$Companion;
	public synthetic fun <init> (Ljava/lang/String;[BLjava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2-TcUX1vc ()[B
	public final fun component3 ()Ljava/util/List;
	public final fun copy-Coi6ktg (Ljava/lang/String;[BLjava/util/List;)Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialDescriptor;
	public static synthetic fun copy-Coi6ktg$default (Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialDescriptor;Ljava/lang/String;[BLjava/util/List;ILjava/lang/Object;)Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialDescriptor;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId-TcUX1vc ()[B
	public final fun getTransports ()Ljava/util/List;
	public final fun getType ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialDescriptor$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialDescriptor$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialDescriptor;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialDescriptor;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialDescriptor$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions {
	public static final field Companion Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions$Companion;
	public synthetic fun <init> ([BLkotlin/ULong;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> ([BLkotlin/ULong;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-TcUX1vc ()[B
	public final fun component2-6VbMDqA ()Lkotlin/ULong;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs;
	public final fun copy-ebjZ_cE ([BLkotlin/ULong;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs;)Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions;
	public static synthetic fun copy-ebjZ_cE$default (Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions;[BLkotlin/ULong;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs;ILjava/lang/Object;)Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllowCredentials ()Ljava/util/List;
	public final fun getChallenge-TcUX1vc ()[B
	public final fun getExtensions ()Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs;
	public final fun getRpId ()Ljava/lang/String;
	public final fun getTimeout-6VbMDqA ()Lkotlin/ULong;
	public final fun getUserVerification ()Ljava/lang/String;
	public final fun hasExtensions ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/auth/fido/domain/entity/Fido2RegisteredKey {
	public static final field Companion Lme/proton/core/auth/fido/domain/entity/Fido2RegisteredKey$Companion;
	public synthetic fun <init> (Ljava/lang/String;[BLjava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2-TcUX1vc ()[B
	public final fun component3 ()Ljava/lang/String;
	public final fun copy-Coi6ktg (Ljava/lang/String;[BLjava/lang/String;)Lme/proton/core/auth/fido/domain/entity/Fido2RegisteredKey;
	public static synthetic fun copy-Coi6ktg$default (Lme/proton/core/auth/fido/domain/entity/Fido2RegisteredKey;Ljava/lang/String;[BLjava/lang/String;ILjava/lang/Object;)Lme/proton/core/auth/fido/domain/entity/Fido2RegisteredKey;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAttestationFormat ()Ljava/lang/String;
	public final fun getCredentialID-TcUX1vc ()[B
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/fido/domain/entity/Fido2RegisteredKey$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/auth/fido/domain/entity/Fido2RegisteredKey$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/auth/fido/domain/entity/Fido2RegisteredKey;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/auth/fido/domain/entity/Fido2RegisteredKey;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/auth/fido/domain/entity/Fido2RegisteredKey$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class me/proton/core/auth/fido/domain/entity/SecondFactorProof {
}

public final class me/proton/core/auth/fido/domain/entity/SecondFactorProof$Fido2 : me/proton/core/auth/fido/domain/entity/SecondFactorProof {
	public fun <init> (Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions;[B[B[B[B)V
	public final fun getAuthenticatorData ()[B
	public final fun getClientData ()[B
	public final fun getCredentialID ()[B
	public final fun getPublicKeyOptions ()Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions;
	public final fun getSignature ()[B
}

public final class me/proton/core/auth/fido/domain/entity/SecondFactorProof$SecondFactorCode : me/proton/core/auth/fido/domain/entity/SecondFactorProof {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lme/proton/core/auth/fido/domain/entity/SecondFactorProof$SecondFactorCode;
	public static synthetic fun copy$default (Lme/proton/core/auth/fido/domain/entity/SecondFactorProof$SecondFactorCode;Ljava/lang/String;ILjava/lang/Object;)Lme/proton/core/auth/fido/domain/entity/SecondFactorProof$SecondFactorCode;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/fido/domain/entity/SecondFactorProof$SecondFactorSignature : me/proton/core/auth/fido/domain/entity/SecondFactorProof {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lme/proton/core/auth/fido/domain/entity/SecondFactorProof$SecondFactorSignature;
	public static synthetic fun copy$default (Lme/proton/core/auth/fido/domain/entity/SecondFactorProof$SecondFactorSignature;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lme/proton/core/auth/fido/domain/entity/SecondFactorProof$SecondFactorSignature;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClientData ()Ljava/lang/String;
	public final fun getKeyHandle ()Ljava/lang/String;
	public final fun getSignatureData ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/fido/domain/ext/Fido2AuthenticationExtensionsClientInputsExtKt {
	public static final fun toJson (Lme/proton/core/auth/fido/domain/entity/Fido2AuthenticationExtensionsClientInputs;)Lkotlinx/serialization/json/JsonObject;
}

public abstract interface class me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey {
	public abstract fun invoke (Ljava/lang/Object;Lme/proton/core/auth/fido/domain/entity/Fido2PublicKeyCredentialRequestOptions;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun register (Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V
}

public final class me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode : java/lang/Enum {
	public static final field ABORT_ERR Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public static final field ATTESTATION_NOT_PRIVATE_ERR Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public static final field CONSTRAINT_ERR Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public static final field DATA_ERR Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public static final field ENCODING_ERR Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public static final field INVALID_STATE_ERR Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public static final field NETWORK_ERR Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public static final field NOT_ALLOWED_ERR Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public static final field NOT_SUPPORTED_ERR Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public static final field SECURITY_ERR Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public static final field TIMEOUT_ERR Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public static final field UNKNOWN Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public static final field UNKNOWN_ERR Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public final fun getCode ()Ljava/lang/Integer;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public static fun values ()[Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
}

public final class me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorData {
	public fun <init> (Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;Ljava/lang/String;)V
	public final fun component1 ()Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;Ljava/lang/String;)Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorData;
	public static synthetic fun copy$default (Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorData;Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;Ljava/lang/String;ILjava/lang/Object;)Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorCode;
	public final fun getMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$LaunchResult {
}

public final class me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$LaunchResult$Failure : me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$LaunchResult {
	public fun <init> (Ljava/lang/Exception;)V
	public final fun component1 ()Ljava/lang/Exception;
	public final fun copy (Ljava/lang/Exception;)Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$LaunchResult$Failure;
	public static synthetic fun copy$default (Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$LaunchResult$Failure;Ljava/lang/Exception;ILjava/lang/Object;)Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$LaunchResult$Failure;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getException ()Ljava/lang/Exception;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$LaunchResult$Success : me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$LaunchResult {
	public static final field INSTANCE Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$LaunchResult$Success;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result {
}

public final class me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result$Cancelled : me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result {
	public static final field INSTANCE Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result$Cancelled;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result$EmptyResult : me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result {
	public static final field INSTANCE Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result$EmptyResult;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result$Error : me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result {
	public fun <init> (Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorData;)V
	public final fun component1 ()Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorData;
	public final fun copy (Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorData;)Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result$Error;
	public static synthetic fun copy$default (Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result$Error;Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorData;ILjava/lang/Object;)Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result$Error;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getError ()Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$ErrorData;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result$Success : me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result {
	public fun <init> ([BLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$SuccessResponseData;)V
	public final fun getAuthenticatorAttachment ()Ljava/lang/String;
	public final fun getId ()Ljava/lang/String;
	public final fun getRawId ()[B
	public final fun getResponse ()Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$SuccessResponseData;
	public final fun getType ()Ljava/lang/String;
}

public final class me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result$UnknownResult : me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result {
	public static final field INSTANCE Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result$UnknownResult;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$SuccessResponseData {
	public fun <init> ([B[B[B)V
	public final fun getAuthenticatorData ()[B
	public final fun getClientDataJSON ()[B
	public final fun getSignature ()[B
}

public final class me/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKeyKt {
	public static final fun toStatus (Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$LaunchResult;)Lme/proton/core/observability/domain/metrics/common/FidoLaunchStatus;
	public static final fun toStatus (Lme/proton/core/auth/fido/domain/usecase/PerformTwoFaWithSecurityKey$Result;)Lme/proton/core/observability/domain/metrics/common/FidoSignStatus;
}

