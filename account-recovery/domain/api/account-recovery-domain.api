public abstract interface class me/proton/core/accountrecovery/domain/IsAccountRecoveryEnabled : me/proton/core/featureflag/domain/IsFeatureFlagEnabled {
}

public abstract interface class me/proton/core/accountrecovery/domain/IsAccountRecoveryResetEnabled : me/proton/core/featureflag/domain/IsFeatureFlagEnabled {
}

public abstract interface class me/proton/core/accountrecovery/domain/repository/AccountRecoveryRepository {
	public abstract fun cancelRecoveryAttempt (Lme/proton/core/crypto/common/srp/SrpProofs;Ljava/lang/String;Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun resetPassword (Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Ljava/util/List;Lme/proton/core/crypto/common/srp/Auth;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun startRecovery (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/accountrecovery/domain/usecase/CancelRecovery {
	public fun <init> (Lme/proton/core/accountmanager/domain/AccountManager;Lme/proton/core/accountrecovery/domain/repository/AccountRecoveryRepository;Lme/proton/core/auth/domain/repository/AuthRepository;Lme/proton/core/crypto/common/context/CryptoContext;Lme/proton/core/eventmanager/domain/EventManagerProvider;)V
	public final fun invoke (Ljava/lang/String;Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/accountrecovery/domain/usecase/ObserveUserRecovery {
	public fun <init> (Lme/proton/core/user/domain/UserManager;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;)Lkotlinx/coroutines/flow/Flow;
}

public final class me/proton/core/accountrecovery/domain/usecase/ObserveUserRecoverySelfInitiated {
	public fun <init> (Lme/proton/core/accountmanager/domain/AccountManager;Lme/proton/core/accountrecovery/domain/usecase/ObserveUserRecovery;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;)Lkotlinx/coroutines/flow/Flow;
}

public final class me/proton/core/accountrecovery/domain/usecase/ObserveUserRecoveryState {
	public fun <init> (Lme/proton/core/accountrecovery/domain/usecase/ObserveUserRecovery;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;)Lkotlinx/coroutines/flow/Flow;
}

public final class me/proton/core/accountrecovery/domain/usecase/StartRecovery {
	public fun <init> (Lme/proton/core/accountrecovery/domain/repository/AccountRecoveryRepository;Lme/proton/core/eventmanager/domain/EventManagerProvider;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

