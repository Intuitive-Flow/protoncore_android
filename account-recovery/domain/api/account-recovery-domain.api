public final class me/proton/core/accountrecovery/domain/AccountRecoveryNotificationManager {
	public fun <init> (Lme/proton/core/accountrecovery/domain/CancelNotifications;Lme/proton/core/accountrecovery/domain/ConfigureAccountRecoveryChannel;Lme/proton/core/accountrecovery/domain/GetAccountRecoveryChannelId;Lme/proton/core/accountrecovery/domain/IsAccountRecoveryEnabled;Lme/proton/core/accountrecovery/domain/ShowNotification;)V
	public final fun setupNotificationChannel ()V
	public final fun updateNotification (Lme/proton/core/user/domain/entity/UserRecovery$State;Lme/proton/core/domain/entity/UserId;)V
}

public abstract interface class me/proton/core/accountrecovery/domain/CancelNotifications {
	public abstract fun invoke (Lme/proton/core/domain/entity/UserId;)V
}

public abstract interface class me/proton/core/accountrecovery/domain/ConfigureAccountRecoveryChannel {
	public abstract fun invoke (Ljava/lang/String;)V
}

public abstract interface class me/proton/core/accountrecovery/domain/GetAccountRecoveryChannelId {
	public abstract fun invoke ()Ljava/lang/String;
}

public abstract interface class me/proton/core/accountrecovery/domain/IsAccountRecoveryEnabled {
	public abstract fun invoke ()Z
}

public abstract interface class me/proton/core/accountrecovery/domain/ShowNotification {
	public abstract fun invoke (Lme/proton/core/user/domain/entity/UserRecovery$State;Lme/proton/core/domain/entity/UserId;)V
}

public abstract interface class me/proton/core/accountrecovery/domain/repository/AccountRecoveryRepository {
	public abstract fun cancelRecoveryAttempt (Lme/proton/core/crypto/common/srp/SrpProofs;Ljava/lang/String;Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/accountrecovery/domain/usecase/CancelRecovery {
	public fun <init> (Lme/proton/core/accountmanager/domain/AccountManager;Lme/proton/core/accountrecovery/domain/repository/AccountRecoveryRepository;Lme/proton/core/auth/domain/repository/AuthRepository;Lme/proton/core/crypto/common/context/CryptoContext;)V
	public final fun invoke (Ljava/lang/String;Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/accountrecovery/domain/usecase/ObserveUserRecoveryState {
	public fun <init> (Lme/proton/core/user/domain/UserManager;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;Z)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun invoke$default (Lme/proton/core/accountrecovery/domain/usecase/ObserveUserRecoveryState;Lme/proton/core/domain/entity/UserId;ZILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
}

