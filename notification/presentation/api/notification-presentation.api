public class hilt_aggregated_deps/_me_proton_core_notification_presentation_receiver_OnDismissNotificationReceiver_GeneratedInjector {
	public fun <init> ()V
}

public class hilt_aggregated_deps/_me_proton_core_notification_presentation_ui_NotificationPermissionActivity_GeneratedInjector {
	public fun <init> ()V
}

public class hilt_aggregated_deps/_me_proton_core_notification_presentation_viewmodel_NotificationPermissionViewModel_HiltModules_BindsModule {
	public fun <init> ()V
}

public class hilt_aggregated_deps/_me_proton_core_notification_presentation_viewmodel_NotificationPermissionViewModel_HiltModules_KeyModule {
	public fun <init> ()V
}

public final class me/proton/core/notification/presentation/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class me/proton/core/notification/presentation/NotificationSetup : androidx/lifecycle/DefaultLifecycleObserver {
	public final fun invoke ()V
}

public final class me/proton/core/notification/presentation/NotificationSetup_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)Lme/proton/core/notification/presentation/NotificationSetup_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/notification/presentation/NotificationSetup;
	public static fun newInstance (Lme/proton/core/accountmanager/domain/AccountManager;Lme/proton/core/presentation/app/ActivityProvider;Lme/proton/core/presentation/app/AppLifecycleObserver;Lme/proton/core/notification/presentation/internal/HasNotificationPermission;Lme/proton/core/notification/domain/usecase/IsNotificationsEnabled;Lme/proton/core/notification/domain/ProtonNotificationManager;Lme/proton/core/notification/domain/usecase/ObservePushNotifications;Lme/proton/core/util/kotlin/CoroutineScopeProvider;)Lme/proton/core/notification/presentation/NotificationSetup;
}

public final class me/proton/core/notification/presentation/internal/GetAndroidSdkLevel_Factory : dagger/internal/Factory {
	public fun <init> ()V
	public static fun create ()Lme/proton/core/notification/presentation/internal/GetAndroidSdkLevel_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/notification/presentation/internal/GetAndroidSdkLevel;
	public static fun newInstance ()Lme/proton/core/notification/presentation/internal/GetAndroidSdkLevel;
}

public final class me/proton/core/notification/presentation/internal/GetNotificationId_Factory : dagger/internal/Factory {
	public fun <init> ()V
	public static fun create ()Lme/proton/core/notification/presentation/internal/GetNotificationId_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/notification/presentation/internal/GetNotificationId;
	public static fun newInstance ()Lme/proton/core/notification/presentation/internal/GetNotificationId;
}

public final class me/proton/core/notification/presentation/internal/GetNotificationTag_Factory : dagger/internal/Factory {
	public fun <init> ()V
	public static fun create ()Lme/proton/core/notification/presentation/internal/GetNotificationTag_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/notification/presentation/internal/GetNotificationTag;
	public static fun newInstance ()Lme/proton/core/notification/presentation/internal/GetNotificationTag;
}

public final class me/proton/core/notification/presentation/internal/HasNotificationPermission_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;Ljavax/inject/Provider;)Lme/proton/core/notification/presentation/internal/HasNotificationPermission_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/notification/presentation/internal/HasNotificationPermission;
	public static fun newInstance (Landroid/content/Context;Lme/proton/core/notification/presentation/internal/GetAndroidSdkLevel;)Lme/proton/core/notification/presentation/internal/HasNotificationPermission;
}

public abstract class me/proton/core/notification/presentation/receiver/Hilt_OnDismissNotificationReceiver : android/content/BroadcastReceiver {
	public fun <init> ()V
	protected fun inject (Landroid/content/Context;)V
	public fun onReceive (Landroid/content/Context;Landroid/content/Intent;)V
}

public final class me/proton/core/notification/presentation/receiver/OnDismissNotificationReceiver : android/content/BroadcastReceiver {
	public fun <init> ()V
	public fun onReceive (Landroid/content/Context;Landroid/content/Intent;)V
}

public abstract interface class me/proton/core/notification/presentation/receiver/OnDismissNotificationReceiver_GeneratedInjector {
	public abstract fun injectOnDismissNotificationReceiver (Lme/proton/core/notification/presentation/receiver/OnDismissNotificationReceiver;)V
}

public final class me/proton/core/notification/presentation/receiver/OnDismissNotificationReceiver_MembersInjector : dagger/MembersInjector {
	public fun <init> (Ljavax/inject/Provider;Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;Ljavax/inject/Provider;)Ldagger/MembersInjector;
	public synthetic fun injectMembers (Ljava/lang/Object;)V
	public fun injectMembers (Lme/proton/core/notification/presentation/receiver/OnDismissNotificationReceiver;)V
	public static fun injectNotificationManager (Lme/proton/core/notification/presentation/receiver/OnDismissNotificationReceiver;Lme/proton/core/notification/domain/ProtonNotificationManager;)V
	public static fun injectScopeProvider (Lme/proton/core/notification/presentation/receiver/OnDismissNotificationReceiver;Lme/proton/core/util/kotlin/CoroutineScopeProvider;)V
}

public abstract class me/proton/core/notification/presentation/ui/Hilt_NotificationPermissionActivity : me/proton/core/presentation/ui/ProtonActivity, dagger/hilt/internal/GeneratedComponentManagerHolder {
	public final fun componentManager ()Ldagger/hilt/android/internal/managers/ActivityComponentManager;
	public synthetic fun componentManager ()Ldagger/hilt/internal/GeneratedComponentManager;
	protected fun createComponentManager ()Ldagger/hilt/android/internal/managers/ActivityComponentManager;
	public final fun generatedComponent ()Ljava/lang/Object;
	public fun getDefaultViewModelProviderFactory ()Landroidx/lifecycle/ViewModelProvider$Factory;
	protected fun inject ()V
}

public final class me/proton/core/notification/presentation/ui/NotificationPermissionActivity : me/proton/core/presentation/ui/ProtonActivity {
	public fun <init> ()V
}

public abstract interface class me/proton/core/notification/presentation/ui/NotificationPermissionActivity_GeneratedInjector {
	public abstract fun injectNotificationPermissionActivity (Lme/proton/core/notification/presentation/ui/NotificationPermissionActivity;)V
}

public final class me/proton/core/notification/presentation/usecase/CancelNotificationViewImpl : me/proton/core/notification/domain/usecase/CancelNotificationView {
	public fun invoke (Lme/proton/core/notification/domain/entity/Notification;)V
	public fun invoke (Lme/proton/core/notification/domain/entity/NotificationId;Lme/proton/core/domain/entity/UserId;)V
}

public final class me/proton/core/notification/presentation/usecase/CancelNotificationViewImpl_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)Lme/proton/core/notification/presentation/usecase/CancelNotificationViewImpl_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/notification/presentation/usecase/CancelNotificationViewImpl;
	public static fun newInstance (Landroid/content/Context;Lme/proton/core/notification/presentation/internal/GetNotificationId;Lme/proton/core/notification/presentation/internal/GetNotificationTag;)Lme/proton/core/notification/presentation/usecase/CancelNotificationViewImpl;
}

public final class me/proton/core/notification/presentation/usecase/ConfigureNotificationChannelImpl : me/proton/core/notification/domain/usecase/ConfigureNotificationChannel {
	public fun <init> (Landroid/content/Context;)V
	public fun invoke (Ljava/lang/String;)V
}

public final class me/proton/core/notification/presentation/usecase/ConfigureNotificationChannelImpl_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;)Lme/proton/core/notification/presentation/usecase/ConfigureNotificationChannelImpl_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/notification/presentation/usecase/ConfigureNotificationChannelImpl;
	public static fun newInstance (Landroid/content/Context;)Lme/proton/core/notification/presentation/usecase/ConfigureNotificationChannelImpl;
}

public final class me/proton/core/notification/presentation/usecase/GetNotificationChannelIdImpl : me/proton/core/notification/domain/usecase/GetNotificationChannelId {
	public fun <init> (Landroid/content/Context;)V
	public fun invoke ()Ljava/lang/String;
}

public final class me/proton/core/notification/presentation/usecase/GetNotificationChannelIdImpl_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;)Lme/proton/core/notification/presentation/usecase/GetNotificationChannelIdImpl_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/notification/presentation/usecase/GetNotificationChannelIdImpl;
	public static fun newInstance (Landroid/content/Context;)Lme/proton/core/notification/presentation/usecase/GetNotificationChannelIdImpl;
}

public final class me/proton/core/notification/presentation/usecase/IsNotificationsEnabledImpl : me/proton/core/notification/domain/usecase/IsNotificationsEnabled {
	public fun <init> (Landroid/content/Context;)V
	public fun invoke ()Z
}

public final class me/proton/core/notification/presentation/usecase/IsNotificationsEnabledImpl_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;)Lme/proton/core/notification/presentation/usecase/IsNotificationsEnabledImpl_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/notification/presentation/usecase/IsNotificationsEnabledImpl;
	public static fun newInstance (Landroid/content/Context;)Lme/proton/core/notification/presentation/usecase/IsNotificationsEnabledImpl;
}

public final class me/proton/core/notification/presentation/usecase/ObservePushNotificationsImpl : me/proton/core/notification/domain/usecase/ObservePushNotifications {
	public fun <init> (Lme/proton/core/notification/domain/repository/NotificationRepository;Lme/proton/core/notification/domain/ProtonNotificationManager;Lme/proton/core/push/domain/repository/PushRepository;Lme/proton/core/util/kotlin/CoroutineScopeProvider;)V
	public fun invoke (Lme/proton/core/domain/entity/UserId;)V
}

public final class me/proton/core/notification/presentation/usecase/ObservePushNotificationsImpl_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)Lme/proton/core/notification/presentation/usecase/ObservePushNotificationsImpl_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/notification/presentation/usecase/ObservePushNotificationsImpl;
	public static fun newInstance (Lme/proton/core/notification/domain/repository/NotificationRepository;Lme/proton/core/notification/domain/ProtonNotificationManager;Lme/proton/core/push/domain/repository/PushRepository;Lme/proton/core/util/kotlin/CoroutineScopeProvider;)Lme/proton/core/notification/presentation/usecase/ObservePushNotificationsImpl;
}

public final class me/proton/core/notification/presentation/usecase/ReplaceNotificationViewsImpl : me/proton/core/notification/domain/usecase/ReplaceNotificationViews {
	public fun <init> (Lme/proton/core/notification/domain/usecase/CancelNotificationView;Landroid/content/Context;Lme/proton/core/notification/domain/usecase/ShowNotificationView;)V
	public fun invoke (Ljava/util/List;Lme/proton/core/domain/entity/UserId;)V
}

public final class me/proton/core/notification/presentation/usecase/ReplaceNotificationViewsImpl_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)Lme/proton/core/notification/presentation/usecase/ReplaceNotificationViewsImpl_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/notification/presentation/usecase/ReplaceNotificationViewsImpl;
	public static fun newInstance (Lme/proton/core/notification/domain/usecase/CancelNotificationView;Landroid/content/Context;Lme/proton/core/notification/domain/usecase/ShowNotificationView;)Lme/proton/core/notification/presentation/usecase/ReplaceNotificationViewsImpl;
}

public final class me/proton/core/notification/presentation/usecase/ShowNotificationViewImpl : me/proton/core/notification/domain/usecase/ShowNotificationView {
	public fun invoke (Lme/proton/core/notification/domain/entity/Notification;)V
}

public final class me/proton/core/notification/presentation/usecase/ShowNotificationViewImpl_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)Lme/proton/core/notification/presentation/usecase/ShowNotificationViewImpl_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/notification/presentation/usecase/ShowNotificationViewImpl;
	public static fun newInstance (Landroid/content/Context;Lme/proton/core/notification/domain/usecase/GetNotificationChannelId;Lme/proton/core/notification/presentation/internal/GetNotificationId;Lme/proton/core/notification/presentation/internal/GetNotificationTag;Lme/proton/core/notification/presentation/internal/HasNotificationPermission;Lme/proton/core/domain/entity/Product;)Lme/proton/core/notification/presentation/usecase/ShowNotificationViewImpl;
}

public final class me/proton/core/notification/presentation/viewmodel/NotificationPermissionViewModel_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;Ljavax/inject/Provider;)Lme/proton/core/notification/presentation/viewmodel/NotificationPermissionViewModel_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/notification/presentation/viewmodel/NotificationPermissionViewModel;
	public static fun newInstance (Lme/proton/core/notification/presentation/internal/GetAndroidSdkLevel;Lme/proton/core/notification/domain/ProtonNotificationManager;)Lme/proton/core/notification/presentation/viewmodel/NotificationPermissionViewModel;
}

public final class me/proton/core/notification/presentation/viewmodel/NotificationPermissionViewModel_HiltModules {
}

public abstract class me/proton/core/notification/presentation/viewmodel/NotificationPermissionViewModel_HiltModules$BindsModule {
	public abstract fun binds (Lme/proton/core/notification/presentation/viewmodel/NotificationPermissionViewModel;)Landroidx/lifecycle/ViewModel;
}

public final class me/proton/core/notification/presentation/viewmodel/NotificationPermissionViewModel_HiltModules$KeyModule {
	public static fun provide ()Ljava/lang/String;
}

public final class me/proton/core/notification/presentation/viewmodel/NotificationPermissionViewModel_HiltModules_KeyModule_ProvideFactory : dagger/internal/Factory {
	public fun <init> ()V
	public static fun create ()Lme/proton/core/notification/presentation/viewmodel/NotificationPermissionViewModel_HiltModules_KeyModule_ProvideFactory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Ljava/lang/String;
	public static fun provide ()Ljava/lang/String;
}

