public final class me/proton/core/humanverification/data/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class me/proton/core/humanverification/data/DeviceVerificationListenerImpl : me/proton/core/network/domain/deviceverification/DeviceVerificationListener {
	public fun <init> (Lme/proton/core/network/domain/deviceverification/DeviceVerificationProvider;Lme/proton/core/crypto/common/srp/SrpChallenge;)V
	public fun onDeviceVerification (Lme/proton/core/network/domain/session/SessionId;Lme/proton/core/network/domain/deviceverification/DeviceVerificationMethods;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/humanverification/data/DeviceVerificationProviderImpl : me/proton/core/network/domain/deviceverification/DeviceVerificationProvider {
	public fun <init> ()V
	public fun getSolvedChallenge (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSolvedChallenge (Lme/proton/core/network/domain/session/SessionId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setSolvedChallenge (Lme/proton/core/network/domain/session/SessionId;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class me/proton/core/humanverification/data/HumanVerificationListenerImpl : me/proton/core/network/domain/humanverification/HumanVerificationListener {
	public fun <init> (Lme/proton/core/humanverification/domain/repository/HumanVerificationRepository;)V
	public fun onHumanVerificationInvalid (Lme/proton/core/network/domain/client/ClientId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onHumanVerificationNeeded (Lme/proton/core/network/domain/client/ClientId;Lme/proton/core/network/domain/humanverification/HumanVerificationAvailableMethods;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/humanverification/data/HumanVerificationManagerImpl : me/proton/core/humanverification/domain/HumanVerificationManager, me/proton/core/humanverification/domain/HumanVerificationWorkflowHandler, me/proton/core/network/domain/humanverification/HumanVerificationListener, me/proton/core/network/domain/humanverification/HumanVerificationProvider {
	public fun <init> (Lme/proton/core/network/domain/humanverification/HumanVerificationProvider;Lme/proton/core/network/domain/humanverification/HumanVerificationListener;Lme/proton/core/humanverification/domain/repository/HumanVerificationRepository;Lme/proton/core/observability/domain/ObservabilityManager;)V
	public fun addDetails (Lme/proton/core/network/domain/humanverification/HumanVerificationDetails;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun clearDetails (Lme/proton/core/network/domain/client/ClientId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getHumanVerificationDetails (Lme/proton/core/network/domain/client/ClientId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun handleHumanVerificationCancelled (Lme/proton/core/network/domain/client/ClientId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun handleHumanVerificationFailed (Lme/proton/core/network/domain/client/ClientId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun handleHumanVerificationSuccess (Lme/proton/core/network/domain/client/ClientId;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onHumanVerificationInvalid (Lme/proton/core/network/domain/client/ClientId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onHumanVerificationNeeded (Lme/proton/core/network/domain/client/ClientId;Lme/proton/core/network/domain/humanverification/HumanVerificationAvailableMethods;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onHumanVerificationStateChanged (Z)Lkotlinx/coroutines/flow/Flow;
}

public final class me/proton/core/humanverification/data/HumanVerificationProviderImpl : me/proton/core/network/domain/humanverification/HumanVerificationProvider {
	public fun <init> (Lme/proton/core/humanverification/domain/repository/HumanVerificationRepository;)V
	public fun getHumanVerificationDetails (Lme/proton/core/network/domain/client/ClientId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/humanverification/data/db/HumanVerificationConverters {
	public fun <init> ()V
	public final fun fromClientIdTypeToString (Lme/proton/core/network/domain/client/ClientIdType;)Ljava/lang/String;
	public final fun fromHumanVerificationStateToString (Lme/proton/core/network/domain/humanverification/HumanVerificationState;)Ljava/lang/String;
	public final fun fromStringToClientIdType (Ljava/lang/String;)Lme/proton/core/network/domain/client/ClientIdType;
	public final fun fromStringToHumanVerificationState (Ljava/lang/String;)Lme/proton/core/network/domain/humanverification/HumanVerificationState;
}

public abstract interface class me/proton/core/humanverification/data/db/HumanVerificationDatabase : me/proton/core/data/room/db/Database {
	public static final field Companion Lme/proton/core/humanverification/data/db/HumanVerificationDatabase$Companion;
	public abstract fun humanVerificationDetailsDao ()Lme/proton/core/humanverification/data/db/HumanVerificationDetailsDao;
}

public final class me/proton/core/humanverification/data/db/HumanVerificationDatabase$Companion {
	public final fun getMIGRATION_0 ()Lme/proton/core/data/room/db/migration/DatabaseMigration;
	public final fun getMIGRATION_1 ()Lme/proton/core/data/room/db/migration/DatabaseMigration;
	public final fun getMIGRATION_2 ()Lme/proton/core/data/room/db/migration/DatabaseMigration;
}

public abstract class me/proton/core/humanverification/data/db/HumanVerificationDetailsDao : me/proton/core/data/room/db/BaseDao {
	public fun <init> ()V
	public abstract fun deleteAll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deleteByClientId (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getAll ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getByClientId (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun updateStateAndToken (Ljava/lang/String;Lme/proton/core/network/domain/humanverification/HumanVerificationState;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/humanverification/data/entity/HumanVerificationEntity {
	public fun <init> (Ljava/lang/String;Lme/proton/core/network/domain/client/ClientIdType;Ljava/util/List;Ljava/lang/String;Lme/proton/core/network/domain/humanverification/HumanVerificationState;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Lme/proton/core/network/domain/client/ClientIdType;Ljava/util/List;Ljava/lang/String;Lme/proton/core/network/domain/humanverification/HumanVerificationState;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lme/proton/core/network/domain/client/ClientIdType;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Lme/proton/core/network/domain/humanverification/HumanVerificationState;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Lme/proton/core/network/domain/client/ClientIdType;Ljava/util/List;Ljava/lang/String;Lme/proton/core/network/domain/humanverification/HumanVerificationState;Ljava/lang/String;Ljava/lang/String;)Lme/proton/core/humanverification/data/entity/HumanVerificationEntity;
	public static synthetic fun copy$default (Lme/proton/core/humanverification/data/entity/HumanVerificationEntity;Ljava/lang/String;Lme/proton/core/network/domain/client/ClientIdType;Ljava/util/List;Ljava/lang/String;Lme/proton/core/network/domain/humanverification/HumanVerificationState;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lme/proton/core/humanverification/data/entity/HumanVerificationEntity;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClientId ()Ljava/lang/String;
	public final fun getClientIdType ()Lme/proton/core/network/domain/client/ClientIdType;
	public final fun getHumanHeaderTokenCode ()Ljava/lang/String;
	public final fun getHumanHeaderTokenType ()Ljava/lang/String;
	public final fun getState ()Lme/proton/core/network/domain/humanverification/HumanVerificationState;
	public final fun getVerificationMethods ()Ljava/util/List;
	public final fun getVerificationToken ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun toHumanVerificationDetails (Lme/proton/core/crypto/common/keystore/KeyStoreCrypto;)Lme/proton/core/network/domain/humanverification/HumanVerificationDetails;
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/humanverification/data/repository/HumanVerificationRepositoryImpl : me/proton/core/humanverification/domain/repository/HumanVerificationRepository {
	public fun <init> (Lme/proton/core/humanverification/data/db/HumanVerificationDatabase;Lme/proton/core/crypto/common/keystore/KeyStoreCrypto;)V
	public fun deleteHumanVerificationDetails (Lme/proton/core/network/domain/client/ClientId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getAllHumanVerificationDetails (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getHumanVerificationDetails (Lme/proton/core/network/domain/client/ClientId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insertHumanVerificationDetails (Lme/proton/core/network/domain/humanverification/HumanVerificationDetails;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onHumanVerificationStateChanged (Z)Lkotlinx/coroutines/flow/Flow;
	public fun updateHumanVerificationState (Lme/proton/core/network/domain/client/ClientId;Lme/proton/core/network/domain/humanverification/HumanVerificationState;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/humanverification/data/utils/NetworkRequestOverriderImpl : me/proton/core/humanverification/domain/utils/NetworkRequestOverrider {
	public static final field Companion Lme/proton/core/humanverification/data/utils/NetworkRequestOverriderImpl$Companion;
	public static final field TAG Ljava/lang/String;
	public fun <init> (Lokhttp3/OkHttpClient;)V
	public fun overrideRequest (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ZLjava/io/InputStream;Ljava/lang/String;)Lme/proton/core/humanverification/domain/utils/NetworkRequestOverrider$Result;
}

public final class me/proton/core/humanverification/data/utils/NetworkRequestOverriderImpl$Companion {
}

