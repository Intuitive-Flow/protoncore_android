public final class me/proton/core/challenge/data/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class me/proton/core/challenge/data/ChallengeManagerImpl : me/proton/core/challenge/domain/ChallengeManager {
	public fun <init> (Lme/proton/core/challenge/domain/repository/ChallengeRepository;)V
	public fun addOrUpdateFrameToFlow (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/util/List;Ljava/util/List;Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getFrameByFlowAndFrameName (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getFramesByFlowName (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun resetFlow (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/challenge/data/DeviceUtilsKt {
	public static final fun appLanguage ()Ljava/lang/String;
	public static final fun defaultDeviceInputMethod (Landroid/content/Context;)Ljava/lang/String;
	public static final fun deviceFontSize (Landroid/content/Context;)F
	public static final fun deviceInputMethods (Landroid/content/Context;)Ljava/util/List;
	public static final fun deviceModelName ()J
	public static final fun deviceRegion (Landroid/content/Context;)Ljava/lang/String;
	public static final fun deviceStorage (Landroid/content/Context;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun deviceTimezone ()Ljava/lang/String;
	public static final fun deviceTimezoneOffset ()I
	public static final fun isDeviceRooted (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun nightMode (Landroid/content/Context;)Z
}

public final class me/proton/core/challenge/data/db/ChallengeConverters {
	public fun <init> ()V
	public final fun fromListOfCharToString (Ljava/util/List;)Ljava/lang/String;
	public final fun fromStringToListOfChars (Ljava/lang/String;)Ljava/util/List;
}

public abstract interface class me/proton/core/challenge/data/db/ChallengeDatabase : me/proton/core/data/room/db/Database {
	public static final field Companion Lme/proton/core/challenge/data/db/ChallengeDatabase$Companion;
	public abstract fun challengeFramesDao ()Lme/proton/core/challenge/data/db/ChallengeFramesDao;
}

public final class me/proton/core/challenge/data/db/ChallengeDatabase$Companion {
	public final fun getMIGRATION_0 ()Lme/proton/core/data/room/db/migration/DatabaseMigration;
	public final fun getMIGRATION_1 ()Lme/proton/core/data/room/db/migration/DatabaseMigration;
}

public abstract class me/proton/core/challenge/data/db/ChallengeFramesDao : me/proton/core/data/room/db/BaseDao {
	public fun <init> ()V
}

public final class me/proton/core/challenge/data/entity/ChallengeFrameEntity {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/util/List;Ljava/util/List;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()I
	public final fun component5 ()Ljava/util/List;
	public final fun component6 ()Ljava/util/List;
	public final fun component7 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/util/List;Ljava/util/List;Ljava/util/List;)Lme/proton/core/challenge/data/entity/ChallengeFrameEntity;
	public static synthetic fun copy$default (Lme/proton/core/challenge/data/entity/ChallengeFrameEntity;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/util/List;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lme/proton/core/challenge/data/entity/ChallengeFrameEntity;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChallengeFrame ()Ljava/lang/String;
	public final fun getClicks ()I
	public final fun getCopy ()Ljava/util/List;
	public final fun getFlow ()Ljava/lang/String;
	public final fun getFocusTime ()Ljava/util/List;
	public final fun getKeys ()Ljava/util/List;
	public final fun getPaste ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class me/proton/core/challenge/data/frame/ChallengeFrame {
	public static final field Companion Lme/proton/core/challenge/data/frame/ChallengeFrame$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public abstract fun getAppLanguage ()Ljava/lang/String;
	public abstract fun getDarkMode ()Z
	public abstract fun getDeviceName ()J
	public abstract fun getFontSize ()Ljava/lang/String;
	public abstract fun getKeyboards ()Ljava/util/List;
	public abstract fun getRegionCode ()Ljava/lang/String;
	public abstract fun getRooted ()Z
	public abstract fun getStorage ()D
	public abstract fun getTimezone ()Ljava/lang/String;
	public abstract fun getTimezoneOffset ()I
	public abstract fun getVersion ()Ljava/lang/String;
	public static final fun write$Self (Lme/proton/core/challenge/data/frame/ChallengeFrame;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class me/proton/core/challenge/data/frame/ChallengeFrame$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/challenge/data/frame/ChallengeFrame$Device : me/proton/core/challenge/data/frame/ChallengeFrame {
	public static final field Companion Lme/proton/core/challenge/data/frame/ChallengeFrame$Device$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;IZLjava/lang/String;DZLjava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;IZLjava/lang/String;DZLjava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Z
	public final fun component11 ()Ljava/util/List;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()J
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()I
	public final fun component7 ()Z
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()D
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;IZLjava/lang/String;DZLjava/util/List;)Lme/proton/core/challenge/data/frame/ChallengeFrame$Device;
	public static synthetic fun copy$default (Lme/proton/core/challenge/data/frame/ChallengeFrame$Device;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;IZLjava/lang/String;DZLjava/util/List;ILjava/lang/Object;)Lme/proton/core/challenge/data/frame/ChallengeFrame$Device;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAppLanguage ()Ljava/lang/String;
	public fun getDarkMode ()Z
	public fun getDeviceName ()J
	public fun getFontSize ()Ljava/lang/String;
	public fun getKeyboards ()Ljava/util/List;
	public fun getRegionCode ()Ljava/lang/String;
	public fun getRooted ()Z
	public fun getStorage ()D
	public fun getTimezone ()Ljava/lang/String;
	public fun getTimezoneOffset ()I
	public fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Lme/proton/core/challenge/data/frame/ChallengeFrame$Device;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class me/proton/core/challenge/data/frame/ChallengeFrame$Device$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/challenge/data/frame/ChallengeFrame$Device$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/challenge/data/frame/ChallengeFrame$Device;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/challenge/data/frame/ChallengeFrame$Device;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/challenge/data/frame/ChallengeFrame$Device$Companion {
	public final fun build (Landroid/content/Context;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/challenge/data/frame/ChallengeFrame$Recovery : me/proton/core/challenge/data/frame/ChallengeFrame {
	public static final field Companion Lme/proton/core/challenge/data/frame/ChallengeFrame$Recovery$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;IZLjava/lang/String;DZLjava/util/List;Lme/proton/core/challenge/data/frame/FrameType;Ljava/util/List;ILjava/util/List;Ljava/util/List;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;IZLjava/lang/String;DZLjava/util/List;Lme/proton/core/challenge/data/frame/FrameType;Ljava/util/List;ILjava/util/List;Ljava/util/List;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Z
	public final fun component11 ()Ljava/util/List;
	public final fun component12 ()Lme/proton/core/challenge/data/frame/FrameType;
	public final fun component13 ()Ljava/util/List;
	public final fun component14 ()I
	public final fun component15 ()Ljava/util/List;
	public final fun component16 ()Ljava/util/List;
	public final fun component17 ()Ljava/util/List;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()J
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()I
	public final fun component7 ()Z
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()D
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;IZLjava/lang/String;DZLjava/util/List;Lme/proton/core/challenge/data/frame/FrameType;Ljava/util/List;ILjava/util/List;Ljava/util/List;Ljava/util/List;)Lme/proton/core/challenge/data/frame/ChallengeFrame$Recovery;
	public static synthetic fun copy$default (Lme/proton/core/challenge/data/frame/ChallengeFrame$Recovery;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;IZLjava/lang/String;DZLjava/util/List;Lme/proton/core/challenge/data/frame/FrameType;Ljava/util/List;ILjava/util/List;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lme/proton/core/challenge/data/frame/ChallengeFrame$Recovery;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAppLanguage ()Ljava/lang/String;
	public final fun getClickOnField ()I
	public final fun getCopyField ()Ljava/util/List;
	public fun getDarkMode ()Z
	public fun getDeviceName ()J
	public fun getFontSize ()Ljava/lang/String;
	public final fun getFrame ()Lme/proton/core/challenge/data/frame/FrameType;
	public final fun getKeyDownField ()Ljava/util/List;
	public fun getKeyboards ()Ljava/util/List;
	public final fun getPasteField ()Ljava/util/List;
	public fun getRegionCode ()Ljava/lang/String;
	public fun getRooted ()Z
	public fun getStorage ()D
	public final fun getTimeOnField ()Ljava/util/List;
	public fun getTimezone ()Ljava/lang/String;
	public fun getTimezoneOffset ()I
	public fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Lme/proton/core/challenge/data/frame/ChallengeFrame$Recovery;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class me/proton/core/challenge/data/frame/ChallengeFrame$Recovery$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/challenge/data/frame/ChallengeFrame$Recovery$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/challenge/data/frame/ChallengeFrame$Recovery;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/challenge/data/frame/ChallengeFrame$Recovery;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/challenge/data/frame/ChallengeFrame$Recovery$Companion {
	public final fun from (Landroid/content/Context;Lme/proton/core/challenge/domain/entity/ChallengeFrameDetails;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/challenge/data/frame/ChallengeFrame$Username : me/proton/core/challenge/data/frame/ChallengeFrame {
	public static final field Companion Lme/proton/core/challenge/data/frame/ChallengeFrame$Username$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;IZLjava/lang/String;DZLjava/util/List;Lme/proton/core/challenge/data/frame/FrameType;Ljava/util/List;ILjava/util/List;Ljava/util/List;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;IZLjava/lang/String;DZLjava/util/List;Lme/proton/core/challenge/data/frame/FrameType;Ljava/util/List;ILjava/util/List;Ljava/util/List;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Z
	public final fun component11 ()Ljava/util/List;
	public final fun component12 ()Lme/proton/core/challenge/data/frame/FrameType;
	public final fun component13 ()Ljava/util/List;
	public final fun component14 ()I
	public final fun component15 ()Ljava/util/List;
	public final fun component16 ()Ljava/util/List;
	public final fun component17 ()Ljava/util/List;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()J
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()I
	public final fun component7 ()Z
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()D
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;IZLjava/lang/String;DZLjava/util/List;Lme/proton/core/challenge/data/frame/FrameType;Ljava/util/List;ILjava/util/List;Ljava/util/List;Ljava/util/List;)Lme/proton/core/challenge/data/frame/ChallengeFrame$Username;
	public static synthetic fun copy$default (Lme/proton/core/challenge/data/frame/ChallengeFrame$Username;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;IZLjava/lang/String;DZLjava/util/List;Lme/proton/core/challenge/data/frame/FrameType;Ljava/util/List;ILjava/util/List;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lme/proton/core/challenge/data/frame/ChallengeFrame$Username;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAppLanguage ()Ljava/lang/String;
	public final fun getClickOnField ()I
	public final fun getCopyField ()Ljava/util/List;
	public fun getDarkMode ()Z
	public fun getDeviceName ()J
	public fun getFontSize ()Ljava/lang/String;
	public final fun getFrame ()Lme/proton/core/challenge/data/frame/FrameType;
	public final fun getKeyDownField ()Ljava/util/List;
	public fun getKeyboards ()Ljava/util/List;
	public final fun getPasteField ()Ljava/util/List;
	public fun getRegionCode ()Ljava/lang/String;
	public fun getRooted ()Z
	public fun getStorage ()D
	public final fun getTimeOnField ()Ljava/util/List;
	public fun getTimezone ()Ljava/lang/String;
	public fun getTimezoneOffset ()I
	public fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Lme/proton/core/challenge/data/frame/ChallengeFrame$Username;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class me/proton/core/challenge/data/frame/ChallengeFrame$Username$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/challenge/data/frame/ChallengeFrame$Username$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/challenge/data/frame/ChallengeFrame$Username;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/challenge/data/frame/ChallengeFrame$Username;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/challenge/data/frame/ChallengeFrame$Username$Companion {
	public final fun from (Landroid/content/Context;Lme/proton/core/challenge/domain/entity/ChallengeFrameDetails;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/challenge/data/frame/FrameType {
	public static final field Companion Lme/proton/core/challenge/data/frame/FrameType$Companion;
	public synthetic fun <init> (ILjava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lme/proton/core/challenge/data/frame/FrameType;
	public static synthetic fun copy$default (Lme/proton/core/challenge/data/frame/FrameType;Ljava/lang/String;ILjava/lang/Object;)Lme/proton/core/challenge/data/frame/FrameType;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Lme/proton/core/challenge/data/frame/FrameType;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class me/proton/core/challenge/data/frame/FrameType$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/challenge/data/frame/FrameType$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/challenge/data/frame/FrameType;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/challenge/data/frame/FrameType;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/challenge/data/frame/FrameType$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/challenge/data/repository/ChallengeRepositoryImpl : me/proton/core/challenge/domain/repository/ChallengeRepository {
	public fun <init> (Lme/proton/core/challenge/data/db/ChallengeDatabase;)V
	public fun deleteFrames (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteFrames (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getFramesByFlow (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getFramesByFlowAndFrame (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insertFrameDetails (Lme/proton/core/challenge/domain/entity/ChallengeFrameDetails;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

