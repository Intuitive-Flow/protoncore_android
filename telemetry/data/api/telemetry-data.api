public class hilt_aggregated_deps/_me_proton_core_telemetry_data_worker_TelemetryWorker_HiltModule {
	public fun <init> ()V
}

public final class me/proton/core/telemetry/data/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public abstract class me/proton/core/telemetry/data/db/TelemetryDao : me/proton/core/data/room/db/BaseDao {
	public fun <init> ()V
}

public abstract interface class me/proton/core/telemetry/data/db/TelemetryDatabase : me/proton/core/data/room/db/Database {
	public static final field Companion Lme/proton/core/telemetry/data/db/TelemetryDatabase$Companion;
	public abstract fun telemetryDao ()Lme/proton/core/telemetry/data/db/TelemetryDao;
}

public final class me/proton/core/telemetry/data/db/TelemetryDatabase$Companion {
	public final fun getMIGRATION_0 ()Lme/proton/core/data/room/db/migration/DatabaseMigration;
}

public final class me/proton/core/telemetry/data/entity/TelemetryEventEntity {
	public fun <init> (JLme/proton/core/domain/entity/UserId;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V
	public synthetic fun <init> (JLme/proton/core/domain/entity/UserId;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()J
	public final fun component2 ()Lme/proton/core/domain/entity/UserId;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()J
	public final fun copy (JLme/proton/core/domain/entity/UserId;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)Lme/proton/core/telemetry/data/entity/TelemetryEventEntity;
	public static synthetic fun copy$default (Lme/proton/core/telemetry/data/entity/TelemetryEventEntity;JLme/proton/core/domain/entity/UserId;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JILjava/lang/Object;)Lme/proton/core/telemetry/data/entity/TelemetryEventEntity;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDimensions ()Ljava/lang/String;
	public final fun getGroup ()Ljava/lang/String;
	public final fun getId ()J
	public final fun getName ()Ljava/lang/String;
	public final fun getTimestamp ()J
	public final fun getUserId ()Lme/proton/core/domain/entity/UserId;
	public final fun getValues ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/telemetry/data/repository/TelemetryLocalDataSourceImpl : me/proton/core/telemetry/domain/repository/TelemetryLocalDataSource {
	public fun <init> (Lme/proton/core/telemetry/data/db/TelemetryDatabase;)V
	public fun addEvent (Lme/proton/core/domain/entity/UserId;Lme/proton/core/telemetry/domain/entity/TelemetryEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteAllEvents (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteEvents (Lme/proton/core/domain/entity/UserId;Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEvents (Lme/proton/core/domain/entity/UserId;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/telemetry/data/repository/TelemetryLocalDataSourceImpl_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;)Lme/proton/core/telemetry/data/repository/TelemetryLocalDataSourceImpl_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/telemetry/data/repository/TelemetryLocalDataSourceImpl;
	public static fun newInstance (Lme/proton/core/telemetry/data/db/TelemetryDatabase;)Lme/proton/core/telemetry/data/repository/TelemetryLocalDataSourceImpl;
}

public final class me/proton/core/telemetry/data/repository/TelemetryRemoteDataSourceImpl : me/proton/core/telemetry/domain/repository/TelemetryRemoteDataSource {
	public fun <init> (Lme/proton/core/network/data/ApiProvider;)V
	public fun sendEvents (Lme/proton/core/domain/entity/UserId;Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/telemetry/data/repository/TelemetryRemoteDataSourceImpl_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;)Lme/proton/core/telemetry/data/repository/TelemetryRemoteDataSourceImpl_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/telemetry/data/repository/TelemetryRemoteDataSourceImpl;
	public static fun newInstance (Lme/proton/core/network/data/ApiProvider;)Lme/proton/core/telemetry/data/repository/TelemetryRemoteDataSourceImpl;
}

public final class me/proton/core/telemetry/data/repository/TelemetryRepositoryImpl : me/proton/core/telemetry/domain/repository/TelemetryRepository {
	public fun <init> (Lme/proton/core/telemetry/domain/repository/TelemetryLocalDataSource;Lme/proton/core/telemetry/domain/repository/TelemetryRemoteDataSource;)V
	public fun addEvent (Lme/proton/core/domain/entity/UserId;Lme/proton/core/telemetry/domain/entity/TelemetryEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteAllEvents (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteEvents (Lme/proton/core/domain/entity/UserId;Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEvents (Lme/proton/core/domain/entity/UserId;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun sendEvents (Lme/proton/core/domain/entity/UserId;Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/telemetry/data/repository/TelemetryRepositoryImpl_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;Ljavax/inject/Provider;)Lme/proton/core/telemetry/data/repository/TelemetryRepositoryImpl_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/telemetry/data/repository/TelemetryRepositoryImpl;
	public static fun newInstance (Lme/proton/core/telemetry/domain/repository/TelemetryLocalDataSource;Lme/proton/core/telemetry/domain/repository/TelemetryRemoteDataSource;)Lme/proton/core/telemetry/data/repository/TelemetryRepositoryImpl;
}

public final class me/proton/core/telemetry/data/usecase/IsTelemetryEnabledImpl : me/proton/core/telemetry/domain/usecase/IsTelemetryEnabled {
	public fun <init> (Lme/proton/core/usersettings/domain/usecase/GetUserSettings;)V
	public fun invoke (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/telemetry/data/usecase/IsTelemetryEnabledImpl_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;)Lme/proton/core/telemetry/data/usecase/IsTelemetryEnabledImpl_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/telemetry/data/usecase/IsTelemetryEnabledImpl;
	public static fun newInstance (Lme/proton/core/usersettings/domain/usecase/GetUserSettings;)Lme/proton/core/telemetry/data/usecase/IsTelemetryEnabledImpl;
}

public final class me/proton/core/telemetry/data/worker/TelemetryWorkerManagerImpl : me/proton/core/telemetry/domain/TelemetryWorkerManager {
	public fun <init> (Landroidx/work/WorkManager;)V
	public fun cancel (Lme/proton/core/domain/entity/UserId;)V
	public fun enqueueOrKeep-HG0u8IE (Lme/proton/core/domain/entity/UserId;J)V
}

public final class me/proton/core/telemetry/data/worker/TelemetryWorkerManagerImpl_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;)Lme/proton/core/telemetry/data/worker/TelemetryWorkerManagerImpl_Factory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/telemetry/data/worker/TelemetryWorkerManagerImpl;
	public static fun newInstance (Landroidx/work/WorkManager;)Lme/proton/core/telemetry/data/worker/TelemetryWorkerManagerImpl;
}

public abstract interface class me/proton/core/telemetry/data/worker/TelemetryWorker_AssistedFactory : androidx/hilt/work/WorkerAssistedFactory {
}

public final class me/proton/core/telemetry/data/worker/TelemetryWorker_AssistedFactory_Impl : me/proton/core/telemetry/data/worker/TelemetryWorker_AssistedFactory {
	public synthetic fun create (Landroid/content/Context;Landroidx/work/WorkerParameters;)Landroidx/work/ListenableWorker;
	public fun create (Landroid/content/Context;Landroidx/work/WorkerParameters;)Lme/proton/core/telemetry/data/worker/TelemetryWorker;
	public static fun create (Lme/proton/core/telemetry/data/worker/TelemetryWorker_Factory;)Ljavax/inject/Provider;
}

public final class me/proton/core/telemetry/data/worker/TelemetryWorker_Factory {
	public fun <init> (Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;)Lme/proton/core/telemetry/data/worker/TelemetryWorker_Factory;
	public fun get (Landroid/content/Context;Landroidx/work/WorkerParameters;)Lme/proton/core/telemetry/data/worker/TelemetryWorker;
	public static fun newInstance (Landroid/content/Context;Landroidx/work/WorkerParameters;Lme/proton/core/telemetry/domain/usecase/ProcessTelemetryEvents;)Lme/proton/core/telemetry/data/worker/TelemetryWorker;
}

public abstract interface class me/proton/core/telemetry/data/worker/TelemetryWorker_HiltModule {
	public abstract fun bind (Lme/proton/core/telemetry/data/worker/TelemetryWorker_AssistedFactory;)Landroidx/hilt/work/WorkerAssistedFactory;
}

