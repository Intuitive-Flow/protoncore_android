public final class me/proton/core/account/domain/entity/Account {
	public fun <init> (Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Ljava/lang/String;Lme/proton/core/account/domain/entity/AccountState;Lme/proton/core/network/domain/session/SessionId;Lme/proton/core/account/domain/entity/SessionState;Lme/proton/core/account/domain/entity/AccountDetails;)V
	public final fun component1 ()Lme/proton/core/domain/entity/UserId;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Lme/proton/core/account/domain/entity/AccountState;
	public final fun component5 ()Lme/proton/core/network/domain/session/SessionId;
	public final fun component6 ()Lme/proton/core/account/domain/entity/SessionState;
	public final fun component7 ()Lme/proton/core/account/domain/entity/AccountDetails;
	public final fun copy (Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Ljava/lang/String;Lme/proton/core/account/domain/entity/AccountState;Lme/proton/core/network/domain/session/SessionId;Lme/proton/core/account/domain/entity/SessionState;Lme/proton/core/account/domain/entity/AccountDetails;)Lme/proton/core/account/domain/entity/Account;
	public static synthetic fun copy$default (Lme/proton/core/account/domain/entity/Account;Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Ljava/lang/String;Lme/proton/core/account/domain/entity/AccountState;Lme/proton/core/network/domain/session/SessionId;Lme/proton/core/account/domain/entity/SessionState;Lme/proton/core/account/domain/entity/AccountDetails;ILjava/lang/Object;)Lme/proton/core/account/domain/entity/Account;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDetails ()Lme/proton/core/account/domain/entity/AccountDetails;
	public final fun getEmail ()Ljava/lang/String;
	public final fun getSessionId ()Lme/proton/core/network/domain/session/SessionId;
	public final fun getSessionState ()Lme/proton/core/account/domain/entity/SessionState;
	public final fun getState ()Lme/proton/core/account/domain/entity/AccountState;
	public final fun getUserId ()Lme/proton/core/domain/entity/UserId;
	public final fun getUsername ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/account/domain/entity/AccountDetails {
	public fun <init> (Lme/proton/core/account/domain/entity/AccountMetadataDetails;Lme/proton/core/account/domain/entity/SessionDetails;)V
	public synthetic fun <init> (Lme/proton/core/account/domain/entity/AccountMetadataDetails;Lme/proton/core/account/domain/entity/SessionDetails;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lme/proton/core/account/domain/entity/AccountMetadataDetails;
	public final fun component2 ()Lme/proton/core/account/domain/entity/SessionDetails;
	public final fun copy (Lme/proton/core/account/domain/entity/AccountMetadataDetails;Lme/proton/core/account/domain/entity/SessionDetails;)Lme/proton/core/account/domain/entity/AccountDetails;
	public static synthetic fun copy$default (Lme/proton/core/account/domain/entity/AccountDetails;Lme/proton/core/account/domain/entity/AccountMetadataDetails;Lme/proton/core/account/domain/entity/SessionDetails;ILjava/lang/Object;)Lme/proton/core/account/domain/entity/AccountDetails;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAccount ()Lme/proton/core/account/domain/entity/AccountMetadataDetails;
	public final fun getSession ()Lme/proton/core/account/domain/entity/SessionDetails;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/account/domain/entity/AccountKt {
	public static final fun isAuthenticated (Lme/proton/core/account/domain/entity/Account;)Z
	public static final fun isCreateAddressNeeded (Lme/proton/core/account/domain/entity/Account;)Z
	public static final fun isDisabled (Lme/proton/core/account/domain/entity/Account;)Z
	public static final fun isReady (Lme/proton/core/account/domain/entity/Account;)Z
	public static final fun isSecondFactorNeeded (Lme/proton/core/account/domain/entity/Account;)Z
	public static final fun isStepNeeded (Lme/proton/core/account/domain/entity/Account;)Z
	public static final fun isTwoPassModeNeeded (Lme/proton/core/account/domain/entity/Account;)Z
}

public final class me/proton/core/account/domain/entity/AccountMetadataDetails {
	public fun <init> (JLjava/util/List;)V
	public final fun component1 ()J
	public final fun component2 ()Ljava/util/List;
	public final fun copy (JLjava/util/List;)Lme/proton/core/account/domain/entity/AccountMetadataDetails;
	public static synthetic fun copy$default (Lme/proton/core/account/domain/entity/AccountMetadataDetails;JLjava/util/List;ILjava/lang/Object;)Lme/proton/core/account/domain/entity/AccountMetadataDetails;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMigrations ()Ljava/util/List;
	public final fun getPrimaryAtUtc ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/account/domain/entity/AccountState : java/lang/Enum {
	public static final field CreateAccountFailed Lme/proton/core/account/domain/entity/AccountState;
	public static final field CreateAccountNeeded Lme/proton/core/account/domain/entity/AccountState;
	public static final field CreateAccountSuccess Lme/proton/core/account/domain/entity/AccountState;
	public static final field CreateAddressFailed Lme/proton/core/account/domain/entity/AccountState;
	public static final field CreateAddressNeeded Lme/proton/core/account/domain/entity/AccountState;
	public static final field CreateAddressSuccess Lme/proton/core/account/domain/entity/AccountState;
	public static final field Disabled Lme/proton/core/account/domain/entity/AccountState;
	public static final field MigrationNeeded Lme/proton/core/account/domain/entity/AccountState;
	public static final field NotReady Lme/proton/core/account/domain/entity/AccountState;
	public static final field Ready Lme/proton/core/account/domain/entity/AccountState;
	public static final field Removed Lme/proton/core/account/domain/entity/AccountState;
	public static final field TwoPassModeFailed Lme/proton/core/account/domain/entity/AccountState;
	public static final field TwoPassModeNeeded Lme/proton/core/account/domain/entity/AccountState;
	public static final field TwoPassModeSuccess Lme/proton/core/account/domain/entity/AccountState;
	public static final field UnlockFailed Lme/proton/core/account/domain/entity/AccountState;
	public static final field UserAddressKeyCheckFailed Lme/proton/core/account/domain/entity/AccountState;
	public static final field UserKeyCheckFailed Lme/proton/core/account/domain/entity/AccountState;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lme/proton/core/account/domain/entity/AccountState;
	public static fun values ()[Lme/proton/core/account/domain/entity/AccountState;
}

public final class me/proton/core/account/domain/entity/AccountType : java/lang/Enum {
	public static final field External Lme/proton/core/account/domain/entity/AccountType;
	public static final field Internal Lme/proton/core/account/domain/entity/AccountType;
	public static final field Username Lme/proton/core/account/domain/entity/AccountType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lme/proton/core/account/domain/entity/AccountType;
	public static fun values ()[Lme/proton/core/account/domain/entity/AccountType;
}

public final class me/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs {
	public static final field Companion Lme/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Boolean;
	public final fun component3 ()Ljava/lang/Boolean;
	public final fun copy (Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;)Lme/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs;
	public static synthetic fun copy$default (Lme/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;ILjava/lang/Object;)Lme/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAppId ()Ljava/lang/String;
	public final fun getThirdPartyPayment ()Ljava/lang/Boolean;
	public final fun getUvm ()Ljava/lang/Boolean;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/account/domain/entity/Fido2AuthenticationOptions {
	public static final field Companion Lme/proton/core/account/domain/entity/Fido2AuthenticationOptions$Companion;
	public fun <init> (Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialRequestOptions;)V
	public final fun component1 ()Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialRequestOptions;
	public final fun copy (Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialRequestOptions;)Lme/proton/core/account/domain/entity/Fido2AuthenticationOptions;
	public static synthetic fun copy$default (Lme/proton/core/account/domain/entity/Fido2AuthenticationOptions;Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialRequestOptions;ILjava/lang/Object;)Lme/proton/core/account/domain/entity/Fido2AuthenticationOptions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPublicKey ()Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialRequestOptions;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/account/domain/entity/Fido2AuthenticationOptions$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/account/domain/entity/Fido2AuthenticationOptions$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/account/domain/entity/Fido2AuthenticationOptions;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/account/domain/entity/Fido2AuthenticationOptions;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/account/domain/entity/Fido2AuthenticationOptions$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/account/domain/entity/Fido2PublicKeyCredentialDescriptor {
	public static final field Companion Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialDescriptor$Companion;
	public synthetic fun <init> (Ljava/lang/String;[BLjava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2-TcUX1vc ()[B
	public final fun component3 ()Ljava/util/List;
	public final fun copy-Coi6ktg (Ljava/lang/String;[BLjava/util/List;)Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialDescriptor;
	public static synthetic fun copy-Coi6ktg$default (Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialDescriptor;Ljava/lang/String;[BLjava/util/List;ILjava/lang/Object;)Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialDescriptor;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId-TcUX1vc ()[B
	public final fun getTransports ()Ljava/util/List;
	public final fun getType ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/account/domain/entity/Fido2PublicKeyCredentialDescriptor$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialDescriptor$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialDescriptor;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialDescriptor;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/account/domain/entity/Fido2PublicKeyCredentialDescriptor$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/account/domain/entity/Fido2PublicKeyCredentialRequestOptions {
	public static final field Companion Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialRequestOptions$Companion;
	public synthetic fun <init> ([BLkotlin/ULong;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lme/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> ([BLkotlin/ULong;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lme/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-TcUX1vc ()[B
	public final fun component2-6VbMDqA ()Lkotlin/ULong;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Lme/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs;
	public final fun copy-ebjZ_cE ([BLkotlin/ULong;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lme/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs;)Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialRequestOptions;
	public static synthetic fun copy-ebjZ_cE$default (Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialRequestOptions;[BLkotlin/ULong;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lme/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs;ILjava/lang/Object;)Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialRequestOptions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllowCredentials ()Ljava/util/List;
	public final fun getChallenge-TcUX1vc ()[B
	public final fun getExtensions ()Lme/proton/core/account/domain/entity/Fido2AuthenticationExtensionsClientInputs;
	public final fun getRpId ()Ljava/lang/String;
	public final fun getTimeout-6VbMDqA ()Lkotlin/ULong;
	public final fun getUserVerification ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/account/domain/entity/Fido2PublicKeyCredentialRequestOptions$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialRequestOptions$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialRequestOptions;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/account/domain/entity/Fido2PublicKeyCredentialRequestOptions;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/account/domain/entity/Fido2PublicKeyCredentialRequestOptions$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/account/domain/entity/Fido2RegisteredKey {
	public static final field Companion Lme/proton/core/account/domain/entity/Fido2RegisteredKey$Companion;
	public synthetic fun <init> (Ljava/lang/String;[BLjava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2-TcUX1vc ()[B
	public final fun component3 ()Ljava/lang/String;
	public final fun copy-Coi6ktg (Ljava/lang/String;[BLjava/lang/String;)Lme/proton/core/account/domain/entity/Fido2RegisteredKey;
	public static synthetic fun copy-Coi6ktg$default (Lme/proton/core/account/domain/entity/Fido2RegisteredKey;Ljava/lang/String;[BLjava/lang/String;ILjava/lang/Object;)Lme/proton/core/account/domain/entity/Fido2RegisteredKey;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAttestationFormat ()Ljava/lang/String;
	public final fun getCredentialID-TcUX1vc ()[B
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/account/domain/entity/Fido2RegisteredKey$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lme/proton/core/account/domain/entity/Fido2RegisteredKey$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lme/proton/core/account/domain/entity/Fido2RegisteredKey;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lme/proton/core/account/domain/entity/Fido2RegisteredKey;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/account/domain/entity/Fido2RegisteredKey$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class me/proton/core/account/domain/entity/SessionDetails {
	public fun <init> (Ljava/lang/String;Lme/proton/core/account/domain/entity/AccountType;ZZLjava/lang/String;Lme/proton/core/account/domain/entity/Fido2AuthenticationOptions;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lme/proton/core/account/domain/entity/AccountType;
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Lme/proton/core/account/domain/entity/Fido2AuthenticationOptions;
	public final fun copy (Ljava/lang/String;Lme/proton/core/account/domain/entity/AccountType;ZZLjava/lang/String;Lme/proton/core/account/domain/entity/Fido2AuthenticationOptions;)Lme/proton/core/account/domain/entity/SessionDetails;
	public static synthetic fun copy$default (Lme/proton/core/account/domain/entity/SessionDetails;Ljava/lang/String;Lme/proton/core/account/domain/entity/AccountType;ZZLjava/lang/String;Lme/proton/core/account/domain/entity/Fido2AuthenticationOptions;ILjava/lang/Object;)Lme/proton/core/account/domain/entity/SessionDetails;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFido2AuthenticationOptions ()Lme/proton/core/account/domain/entity/Fido2AuthenticationOptions;
	public final fun getInitialEventId ()Ljava/lang/String;
	public final fun getPassword ()Ljava/lang/String;
	public final fun getRequiredAccountType ()Lme/proton/core/account/domain/entity/AccountType;
	public final fun getSecondFactorEnabled ()Z
	public final fun getTwoPassModeEnabled ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/account/domain/entity/SessionState : java/lang/Enum {
	public static final field Authenticated Lme/proton/core/account/domain/entity/SessionState;
	public static final field ForceLogout Lme/proton/core/account/domain/entity/SessionState;
	public static final field SecondFactorFailed Lme/proton/core/account/domain/entity/SessionState;
	public static final field SecondFactorNeeded Lme/proton/core/account/domain/entity/SessionState;
	public static final field SecondFactorSuccess Lme/proton/core/account/domain/entity/SessionState;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lme/proton/core/account/domain/entity/SessionState;
	public static fun values ()[Lme/proton/core/account/domain/entity/SessionState;
}

public abstract interface class me/proton/core/account/domain/repository/AccountRepository {
	public abstract fun addMigration (Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun clearSessionDetails (Lme/proton/core/network/domain/session/SessionId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun createOrUpdateAccountSession (Lme/proton/core/account/domain/entity/Account;Lme/proton/core/network/domain/session/Session;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun createOrUpdateSession (Lme/proton/core/domain/entity/UserId;Lme/proton/core/network/domain/session/Session;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deleteAccount (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deleteSession (Lme/proton/core/network/domain/session/SessionId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getAccount (Lme/proton/core/domain/entity/UserId;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getAccount (Lme/proton/core/network/domain/session/SessionId;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getAccountOrNull (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getAccountOrNull (Lme/proton/core/network/domain/session/SessionId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getAccounts ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getPreviousPrimaryUserId (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getPrimaryUserId ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getSession (Lme/proton/core/network/domain/session/SessionId;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getSessionDetails (Lme/proton/core/network/domain/session/SessionId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getSessionIdOrNull (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getSessionOrNull (Lme/proton/core/network/domain/session/SessionId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getSessions ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun onAccountStateChanged (Z)Lkotlinx/coroutines/flow/Flow;
	public abstract fun onSessionStateChanged (Z)Lkotlinx/coroutines/flow/Flow;
	public abstract fun removeMigration (Lme/proton/core/domain/entity/UserId;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun setAsPrimary (Lme/proton/core/domain/entity/UserId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun setSessionDetails (Lme/proton/core/network/domain/session/SessionId;Lme/proton/core/account/domain/entity/SessionDetails;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun updateAccountState (Lme/proton/core/domain/entity/UserId;Lme/proton/core/account/domain/entity/AccountState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun updateAccountState (Lme/proton/core/network/domain/session/SessionId;Lme/proton/core/account/domain/entity/AccountState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun updateSessionScopes (Lme/proton/core/network/domain/session/SessionId;Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun updateSessionState (Lme/proton/core/domain/entity/UserId;Lme/proton/core/account/domain/entity/SessionState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun updateSessionState (Lme/proton/core/network/domain/session/SessionId;Lme/proton/core/account/domain/entity/SessionState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun updateSessionToken (Lme/proton/core/network/domain/session/SessionId;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

